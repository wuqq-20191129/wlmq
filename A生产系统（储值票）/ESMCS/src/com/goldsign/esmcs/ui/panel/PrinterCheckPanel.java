
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GenIssueRequestPanel.java
 *
 * Created on 2011-8-3, 8:31:03
 */

package com.goldsign.esmcs.ui.panel;

import com.goldsign.csfrm.ui.common.NumberDocument;
import com.goldsign.csfrm.util.MessageShowUtil;
import com.goldsign.csfrm.vo.CallParam;
import com.goldsign.csfrm.vo.CallResult;
import com.goldsign.esmcs.application.Application;
import com.goldsign.esmcs.env.AppConstant;
import com.goldsign.esmcs.exception.EsJniException;
import com.goldsign.esmcs.service.IEsDeviceService;
import org.apache.log4j.Logger;

/**
 * 设备诊断
 * 
 * @author Administrator
 */
public class PrinterCheckPanel extends javax.swing.JPanel {
    
    private static Logger logger = Logger.getLogger(PrinterCheckPanel.class.getName());

    private IEsDeviceService esDeviceService;
   
    /** Creates new form GenIssueRequestPanel */
    public PrinterCheckPanel() {
        
        this.esDeviceService = ((Application) AppConstant.application).getEsDeviceService();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        dllVersionTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        devVersionTxt = new javax.swing.JTextField();
        versionQueryB = new javax.swing.JButton();
        jPanel17 = new javax.swing.JPanel();
        inChPrintModeB = new javax.swing.JButton();
        outChPrintModeB = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        rowPitchButton = new javax.swing.JButton();
        rowPitchText = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        inPrintArea = new javax.swing.JTextArea();
        inPrint = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        nPointNButton = new javax.swing.JButton();
        nPointENButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        nPointTxt = new javax.swing.JTextField();
        nPointButton = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        setPrintModeB = new javax.swing.JButton();
        smallFoint = new javax.swing.JRadioButton();
        bigFoint = new javax.swing.JRadioButton();
        frontRadio = new javax.swing.JRadioButton();
        sideRadio = new javax.swing.JRadioButton();
        jPanel22 = new javax.swing.JPanel();
        chPitchButton = new javax.swing.JButton();
        jPanel23 = new javax.swing.JPanel();
        initPrinterB = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(845, 589));

        jPanel3.setBackground(new java.awt.Color(237, 247, 249));

        jPanel10.setBackground(new java.awt.Color(237, 247, 249));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "版本信息", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel10.setOpaque(false);

        jLabel9.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 39, 80));
        jLabel9.setText("DLL版本：");

        dllVersionTxt.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        dllVersionTxt.setForeground(new java.awt.Color(0, 39, 80));

        jLabel10.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 39, 80));
        jLabel10.setText("设备版本：");

        devVersionTxt.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        devVersionTxt.setForeground(new java.awt.Color(0, 39, 80));

        versionQueryB.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        versionQueryB.setText("查询");
        versionQueryB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryVersionAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel9)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dllVersionTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(28, 28, 28)
                .add(jLabel10)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(devVersionTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(44, 44, 44)
                .add(versionQueryB)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(dllVersionTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10)
                    .add(devVersionTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(versionQueryB))
                .addContainerGap())
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "汉字模式", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel17.setOpaque(false);

        inChPrintModeB.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        inChPrintModeB.setText("进入汉字打印模式");
        inChPrintModeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prinChPrintModeBterToChineseAction(evt);
            }
        });

        outChPrintModeB.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        outChPrintModeB.setText("退出汉字打印模式");
        outChPrintModeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printerNoToChineseAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel17Layout = new org.jdesktop.layout.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel17Layout.createSequentialGroup()
                .add(43, 43, 43)
                .add(inChPrintModeB)
                .add(33, 33, 33)
                .add(outChPrintModeB)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel17Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(inChPrintModeB)
                    .add(outChPrintModeB))
                .add(55, 55, 55))
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "行间间距", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel18.setOpaque(false);

        jLabel4.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 39, 80));
        jLabel4.setText("n点行间距：");

        rowPitchButton.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        rowPitchButton.setText("设置行间距");
        rowPitchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rowPitchButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel18Layout = new org.jdesktop.layout.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .add(jLabel4)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(rowPitchText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(rowPitchButton)
                .add(24, 24, 24))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel18Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(rowPitchButton)
                    .add(rowPitchText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "输入缓冲区", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel19.setOpaque(false);

        inPrintArea.setColumns(20);
        inPrintArea.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        inPrintArea.setForeground(new java.awt.Color(0, 39, 80));
        inPrintArea.setRows(5);
        jScrollPane2.setViewportView(inPrintArea);

        inPrint.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        inPrint.setText("打印");
        inPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printCharsAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel19Layout = new org.jdesktop.layout.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel19Layout.createSequentialGroup()
                .add(40, 40, 40)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 598, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(inPrint)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel19Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(inPrint)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "输出缓冲区", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel20.setOpaque(false);

        nPointNButton.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        nPointNButton.setText("打印缓冲区并换行");
        nPointNButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBufAndRunOneRowLFAction(evt);
            }
        });

        nPointENButton.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        nPointENButton.setText("打印缓冲区并回车");
        nPointENButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBufAndRunOneRowCRAction(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel11.setText("走n点行：");

        nPointTxt.setDocument(new NumberDocument(2,0));
        nPointTxt.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        nPointTxt.setForeground(new java.awt.Color(0, 39, 80));

        nPointButton.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        nPointButton.setText("打印缓冲区");
        nPointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printerRunNRowsAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel20Layout = new org.jdesktop.layout.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel20Layout.createSequentialGroup()
                .add(38, 38, 38)
                .add(jLabel11)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nPointTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(nPointButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(nPointNButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(nPointENButton)
                .add(36, 36, 36))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel20Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(nPointButton)
                    .add(nPointTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(nPointNButton)
                    .add(nPointENButton))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "打印模式", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel21.setOpaque(false);

        setPrintModeB.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        setPrintModeB.setText("设置打印模式");
        setPrintModeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setPrintModeAction(evt);
            }
        });

        buttonGroup1.add(smallFoint);
        smallFoint.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        smallFoint.setForeground(new java.awt.Color(0, 39, 80));
        smallFoint.setSelected(true);
        smallFoint.setText("小字体");
        smallFoint.setName("fonts"); // NOI18N
        smallFoint.setOpaque(false);

        buttonGroup1.add(bigFoint);
        bigFoint.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        bigFoint.setForeground(new java.awt.Color(0, 39, 80));
        bigFoint.setText("大字体");
        bigFoint.setName("fonts"); // NOI18N
        bigFoint.setOpaque(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, smallFoint, org.jdesktop.beansbinding.ELProperty.create("!${selected}"), bigFoint, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        buttonGroup2.add(frontRadio);
        frontRadio.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        frontRadio.setForeground(new java.awt.Color(0, 39, 80));
        frontRadio.setSelected(true);
        frontRadio.setText("正向打印");
        frontRadio.setOpaque(false);

        buttonGroup2.add(sideRadio);
        sideRadio.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        sideRadio.setForeground(new java.awt.Color(0, 39, 80));
        sideRadio.setText("反向打印");
        sideRadio.setOpaque(false);

        org.jdesktop.layout.GroupLayout jPanel21Layout = new org.jdesktop.layout.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel21Layout.createSequentialGroup()
                .add(39, 39, 39)
                .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel21Layout.createSequentialGroup()
                        .add(bigFoint)
                        .add(0, 0, Short.MAX_VALUE))
                    .add(jPanel21Layout.createSequentialGroup()
                        .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(setPrintModeB)
                            .add(jPanel21Layout.createSequentialGroup()
                                .add(smallFoint)
                                .add(104, 104, 104)
                                .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(sideRadio)
                                    .add(frontRadio))))
                        .addContainerGap(28, Short.MAX_VALUE))))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(smallFoint)
                    .add(frontRadio))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel21Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bigFoint)
                    .add(sideRadio))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 28, Short.MAX_VALUE)
                .add(setPrintModeB)
                .addContainerGap())
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "字符间距", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel22.setOpaque(false);

        chPitchButton.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        chPitchButton.setText("设置1/6英寸字符行间距");
        chPitchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setRowDis16MileAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel22Layout = new org.jdesktop.layout.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel22Layout.createSequentialGroup()
                .add(64, 64, 64)
                .add(chPitchButton)
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel22Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(chPitchButton)
                .addContainerGap())
        );

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "初始化", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel23.setOpaque(false);

        initPrinterB.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        initPrinterB.setText("初始化");
        initPrinterB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                initPrinterAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel23Layout = new org.jdesktop.layout.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .add(initPrinterB)
                .add(35, 35, 35))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .add(initPrinterB)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel19, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3Layout.createSequentialGroup()
                        .add(jPanel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3Layout.createSequentialGroup()
                        .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel3Layout.createSequentialGroup()
                        .add(jPanel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel17, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel20, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(0, 13, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel21, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel17, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 845, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 31, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 31, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 589, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 31, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 31, Short.MAX_VALUE)))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 查询版本号
     * 
     * @param evt 
     */
    private void queryVersionAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryVersionAction
        //设置DLL版本
        queryDllVersion();
        //设置设备版本
        queryDevVersion();
    }//GEN-LAST:event_queryVersionAction

    /**
     * 初始化打印机
     * 
     * @param evt 
     */
    private void initPrinterAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_initPrinterAction
        
        initPrinter();
    }//GEN-LAST:event_initPrinterAction

    /**
     * 初始化打印机
     * 
     */
    private void initPrinter(){
    
        CallResult callResult = null;
        try {
            callResult = esDeviceService.printerInit();
            if (!callResult.isSuccess()) {
                MessageShowUtil.alertWarnMsg(callResult.getMsg());
            } else {
                MessageShowUtil.alertInfoMsg("打印机初始化成功");
            }
        } catch (EsJniException ex) {
            MessageShowUtil.alertErrorMsg(ex.getMessage());
            logger.error(ex);
        }
    }
    
    /**
     * 设置打印模式
     * 
     * @param evt 
     */
    private void setPrintModeAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setPrintModeAction
        
        setPrintMode();
    }//GEN-LAST:event_setPrintModeAction

    /**
     * 设置打印模式
     * 
     */
    private void setPrintMode(){
        
        CallParam callParam = new CallParam();
        CallResult callResult = null;
        try {
            callParam.setParam(getFontsMode());//取字符大小
            callParam.setParam(getPrintMode());//打印方向
            
            callResult = esDeviceService.printerSetPrintMode(callParam);
            if (!callResult.isSuccess()) {
                MessageShowUtil.alertWarnMsg(callResult.getMsg());
            } else {
                MessageShowUtil.alertWarnMsg("设置打印模块成功");
            }
        } catch (EsJniException ex) {
            logger.error(ex);
            MessageShowUtil.alertErrorMsg(ex.getMessage());
        }
    }
    
    /**
     * 进入汉字打印模式
     * 
     * @param evt 
     */
    private void prinChPrintModeBterToChineseAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prinChPrintModeBterToChineseAction
        
        setPrinterToChinese(1);
    }//GEN-LAST:event_prinChPrintModeBterToChineseAction

    /**
     * 退出汉字打印模式
     * 
     * @param evt 
     */
    private void printerNoToChineseAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printerNoToChineseAction
        
        setPrinterToChinese(0);
    }//GEN-LAST:event_printerNoToChineseAction

    /**
     * 设置1/6英寸字符间距
     * 
     * @param evt 
     */
    private void setRowDis16MileAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setRowDis16MileAction
        
        setRowDis16Mile();
    }//GEN-LAST:event_setRowDis16MileAction

    /**
     * 设置1/6英寸字符间距
     * 
     */
    private void setRowDis16Mile(){
        
         CallResult callResult = null;
         
        try {
           
            callResult = esDeviceService.printerSetRowDis16Mile();
            if (!callResult.isSuccess()) {
                MessageShowUtil.alertWarnMsg("设置字符间距失败，请检查端口是否正常");
            }else{
                MessageShowUtil.alertInfoMsg("设置字符间距成功");
            }
        } catch (EsJniException ex) {
            logger.error(ex);
            MessageShowUtil.alertErrorMsg(ex.getMessage());
        }    
    }
    
    /**
     * 设置打印机行间距
     * 
     */
    private void setRowDisNPoints(){
        CallParam callParam = new CallParam();
        CallResult callResult = null;
        try {
                        
            callParam.setParam(rowPitchText.getText());           
            callResult = esDeviceService.printerSetRowDisNPoints(callParam);
            if (!callResult.isSuccess()) {
                MessageShowUtil.alertWarnMsg("设置打印机行间距失败");
            } else {
                MessageShowUtil.alertInfoMsg("设置打印机行间距成功");
            }
        } catch (Exception ex) {
            logger.error(ex);
            MessageShowUtil.alertErrorMsg(ex.getMessage());
        }
    }
    
    /**
     * 打印输入缓冲区内容
     * 
     * @param evt 
     */
    private void printCharsAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printCharsAction
        
        printChars();
    }//GEN-LAST:event_printCharsAction

    /**
     * 打印输入缓冲区内容
     * 
     */
    private void printChars(){
        
        CallParam callParam = new CallParam();
        CallResult callResult = null;
        try {
            
            callParam.setParam(inPrintArea.getText());
            callResult = esDeviceService.printerPrintChars(callParam);
            if (!callResult.isSuccess()) {
                MessageShowUtil.alertWarnMsg(callResult.getMsg());
            } else {
                MessageShowUtil.alertInfoMsg("打印字符成功");
            }
        } catch (EsJniException ex) {
            logger.error(ex);
            MessageShowUtil.alertErrorMsg(ex.getMessage());
        }
    }
    
    /**
     * 打印输出缓冲区
     * 
     * @param evt 
     */
    private void printerRunNRowsAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printerRunNRowsAction

        printerRunNRows();
    }//GEN-LAST:event_printerRunNRowsAction

    /**
     * 打印输出缓冲区
     * 
     */
    private void printerRunNRows(){
    
        CallParam callParam = new CallParam();
        CallResult callResult;
        try {

            callParam.setParam(nPointTxt.getText());
            callResult = esDeviceService.printerRunNRows(callParam);
            if (!callResult.isSuccess()) {
                MessageShowUtil.alertWarnMsg("打印输出缓冲区失败");
            } else {
                MessageShowUtil.alertInfoMsg("打印输出缓冲区成功");
            }
        } catch (EsJniException ex) {
            logger.error(ex);
            MessageShowUtil.alertErrorMsg(ex.getMessage());
        }
    }
    
    /**
     * 打印行缓冲器里的内容，换行
     * 
     * @param evt 
     */
    private void printBufAndRunOneRowLFAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBufAndRunOneRowLFAction
        
        printBufAndRunOneRowLF();
    }//GEN-LAST:event_printBufAndRunOneRowLFAction

    /**
     * 打印行缓冲器里的内容，换行
     * 
     */
    private void printBufAndRunOneRowLF(){
        
        CallResult callResult = null;
        try {
            
            callResult = esDeviceService.printBufAndRunOneRowLF();
            if (!callResult.isSuccess()) {
                MessageShowUtil.alertWarnMsg("打印行缓冲器并换行失败");
            } else {
                MessageShowUtil.alertInfoMsg("打印行缓冲器并换行成功");
            }
        } catch (EsJniException ex) {
            logger.error(ex);
            MessageShowUtil.alertErrorMsg(ex.getMessage());
        } 
    }
    
    /**
     * 打印行缓冲器里的内容，回车
     * 
     * @param evt 
     */
    private void printBufAndRunOneRowCRAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBufAndRunOneRowCRAction
        
        printBufAndRunOneRowCR();
    }//GEN-LAST:event_printBufAndRunOneRowCRAction

    private void rowPitchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rowPitchButtonActionPerformed
        // TODO add your handling code here:
        setRowDisNPoints();
    }//GEN-LAST:event_rowPitchButtonActionPerformed

    /**
     * 打印行缓冲器里的内容，回车
     * 
     */
    private void printBufAndRunOneRowCR(){

        CallResult callResult = null;
        try {
            
            callResult = esDeviceService.printBufAndRunOneRowCR();
            if (!callResult.isSuccess()) {
                MessageShowUtil.alertWarnMsg("打印行缓冲器并回车成功");
            } else {
                MessageShowUtil.alertInfoMsg("打印行缓冲器并回车成功");
            }
        } catch (EsJniException ex) {
            logger.error(ex);
            MessageShowUtil.alertErrorMsg(ex.getMessage());
        }
    }
    
    /**
     * 查询DLL版本
     * 
     */
    private void queryDllVersion() {
        
        CallResult callResult = null;
        try {
            callResult = esDeviceService.printerGetDllVersion();
            if(!callResult.isSuccess()){
                MessageShowUtil.alertWarnMsg("取DLL版本失败.");
                return;
            }
            dllVersionTxt.setText(callResult.getObj().toString());
        } catch (EsJniException ex) {
            MessageShowUtil.alertErrorMsg(ex.getMessage());
            logger.error(ex);
        }
    }
    
    /**
     * 查询设备版本
     * 
     */
    private void queryDevVersion() {
        
        CallResult callResult = null;
        
        try {
            callResult = esDeviceService.printerGetDllVersion();
            
            if(!callResult.isSuccess()){
                MessageShowUtil.alertWarnMsg("取设备版本失败.");
                return;
            }
            devVersionTxt.setText("API 未提供方法");
        } catch (EsJniException ex) {
            MessageShowUtil.alertErrorMsg(ex.getMessage());
            logger.error(ex);
        }
    }
    
    /**
     * 设置汉字模式
     * 
     * @param mode 
     */
    private void setPrinterToChinese(int mode){
        
        CallParam callParam = new CallParam();
        CallResult callResult = null;
        
        try {
            callParam.setParam(mode);
            callResult = esDeviceService.printerToChinese(callParam);
            if (!callResult.isSuccess()) {
                 if(mode==1){
                    MessageShowUtil.alertWarnMsg("进入汉字模式失败，请检查端口是否连接正常！");
                }else if(mode==0){
                   MessageShowUtil.alertWarnMsg("退出汉字模式失败，请检查端口是否连接正常！");
                }
            }else{
                if(mode==1){
                    MessageShowUtil.alertInfoMsg("进入汉字模式成功");
                }else if(mode==0){
                    MessageShowUtil.alertInfoMsg("退出汉字模式成功");
                }
            }
        } catch (EsJniException ex) {
            logger.error(ex);
            MessageShowUtil.alertErrorMsg(ex.getMessage());
        }
    }
    
    /**
     * 取字符大小
     * 
     * @return 
     */
    private int getFontsMode(){
        
        if(bigFoint.isSelected()){
            return 1;
        }else{
            return 0;
        }
    }
    
    /**
     * 打印方向
     * 
     * @return 
     */
    private int getPrintMode(){
        
        if(sideRadio.isSelected()){
            return 1;
        }else{
            return 0;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bigFoint;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton chPitchButton;
    private javax.swing.JTextField devVersionTxt;
    private javax.swing.JTextField dllVersionTxt;
    private javax.swing.JRadioButton frontRadio;
    private javax.swing.JButton inChPrintModeB;
    private javax.swing.JButton inPrint;
    private javax.swing.JTextArea inPrintArea;
    private javax.swing.JButton initPrinterB;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton nPointButton;
    private javax.swing.JButton nPointENButton;
    private javax.swing.JButton nPointNButton;
    private javax.swing.JTextField nPointTxt;
    private javax.swing.JButton outChPrintModeB;
    private javax.swing.JButton rowPitchButton;
    private javax.swing.JTextField rowPitchText;
    private javax.swing.JButton setPrintModeB;
    private javax.swing.JRadioButton sideRadio;
    private javax.swing.JRadioButton smallFoint;
    private javax.swing.JButton versionQueryB;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
