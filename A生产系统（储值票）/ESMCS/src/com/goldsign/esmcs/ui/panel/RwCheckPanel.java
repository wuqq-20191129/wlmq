
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RwCheckPanel.java
 */

package com.goldsign.esmcs.ui.panel;

import com.goldsign.csfrm.util.MessageShowUtil;
import com.goldsign.csfrm.vo.CallResult;
import com.goldsign.esmcs.application.Application;
import com.goldsign.esmcs.env.AppConstant;
import com.goldsign.esmcs.exception.RwJniException;
import com.goldsign.esmcs.service.IRwDeviceService;
import com.goldsign.esmcs.vo.AnalyzeVo;
import com.goldsign.esmcs.vo.RwVersionVo;
import org.apache.log4j.Logger;

/**
 * 设备诊断
 * 
 * @author Administrator
 */
public class RwCheckPanel extends javax.swing.JPanel {

    private static Logger logger = Logger.getLogger(RwCheckPanel.class.getName());
    
    private IRwDeviceService[] rwDeviceServices;
   
    /** Creates new form GenIssueRequestPanel */
    public RwCheckPanel() {
        initComponents();
        this.rwDeviceServices = ((Application) AppConstant.application).getRwDeviceServices();
        initComBoxes();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel5 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        readFieldTxt = new javax.swing.JTextArea();
        jButton31 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        apiVerText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        apiFileVerText = new javax.swing.JTextField();
        versionQtButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        rfVerText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        rfFileVerText = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        samVerText = new javax.swing.JTextField();
        samFileVerText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        rwCB = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(254, 254, 254));
        setPreferredSize(new java.awt.Dimension(845, 589));

        jPanel5.setBackground(new java.awt.Color(237, 247, 249));
        jPanel5.setPreferredSize(new java.awt.Dimension(815, 538));

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "读卡信息", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel25.setOpaque(false);

        readFieldTxt.setColumns(20);
        readFieldTxt.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        readFieldTxt.setForeground(new java.awt.Color(0, 39, 80));
        readFieldTxt.setRows(5);
        jScrollPane6.setViewportView(readFieldTxt);

        jButton31.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jButton31.setText("读卡");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readCardAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel25Layout = new org.jdesktop.layout.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel25Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton31)
                .add(32, 32, 32))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jButton31)
                .add(28, 28, 28))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "版本信息", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel10.setOpaque(false);

        jLabel9.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 39, 80));
        jLabel9.setText("API识别版本：");

        apiVerText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        apiVerText.setForeground(new java.awt.Color(0, 39, 80));

        jLabel10.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 39, 80));
        jLabel10.setText("API文件版本：");

        apiFileVerText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        apiFileVerText.setForeground(new java.awt.Color(0, 39, 80));

        versionQtButton.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        versionQtButton.setText("查询");
        versionQtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryVersionAction(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 39, 80));
        jLabel12.setText("Rf驱动识别版本：");

        rfVerText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        rfVerText.setForeground(new java.awt.Color(0, 39, 80));

        jLabel13.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 39, 80));
        jLabel13.setText("Rf驱动文件版本：");

        rfFileVerText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        rfFileVerText.setForeground(new java.awt.Color(0, 39, 80));

        jLabel15.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 39, 80));
        jLabel15.setText("Sam驱动识别版本：");

        samVerText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        samVerText.setForeground(new java.awt.Color(0, 39, 80));

        samFileVerText.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        samFileVerText.setForeground(new java.awt.Color(0, 39, 80));

        jLabel16.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 39, 80));
        jLabel16.setText("Sam驱动文件版本：");

        rwCB.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        rwCB.setForeground(new java.awt.Color(0, 39, 80));
        rwCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "无" }));

        jLabel17.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 39, 80));
        jLabel17.setText("读写器：");

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel12)
                            .add(jLabel9)))
                    .add(jLabel15))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(samVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(rfVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(apiVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel10Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jLabel10))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 10, Short.MAX_VALUE)
                        .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel13)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel16))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(rfFileVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(samFileVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 14, Short.MAX_VALUE))
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(apiFileVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(jLabel17)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(rwCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(versionQtButton))
                .add(16, 16, 16))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel9)
                            .add(apiVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel12)
                            .add(rfVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel13)
                            .add(rfFileVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(13, 13, 13)
                        .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel15)
                            .add(samVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel16)
                            .add(samFileVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel10)
                            .add(apiFileVerText, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel17, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(rwCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(32, 32, 32)
                        .add(versionQtButton)
                        .add(32, 32, 32))))
        );

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel25, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel5Layout.createSequentialGroup()
                        .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 3, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 845, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 31, Short.MAX_VALUE)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 783, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 31, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 589, Short.MAX_VALUE)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout.createSequentialGroup()
                    .add(0, 26, Short.MAX_VALUE)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 25, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 版本查询
     * 
     * @param evt 
     */
    private void queryVersionAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryVersionAction
        
        queryVersion();
    }//GEN-LAST:event_queryVersionAction

    /**
     * 读卡
     * 
     * @param evt 
     */
    private void readCardAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readCardAction
        
        readCardAction();
    }//GEN-LAST:event_readCardAction

    /**
     * 初始化读写器下拉
     * 
     */
    private void initComBoxes(){
        
        rwCB.removeAllItems(); 
        int len = rwDeviceServices.length;
        for(int i=1; i<=len; i++){
            rwCB.addItem(i + "#读头");
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apiFileVerText;
    private javax.swing.JTextField apiVerText;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton31;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea readFieldTxt;
    private javax.swing.JTextField rfFileVerText;
    private javax.swing.JTextField rfVerText;
    private javax.swing.JComboBox rwCB;
    private javax.swing.JTextField samFileVerText;
    private javax.swing.JTextField samVerText;
    private javax.swing.JButton versionQtButton;
    // End of variables declaration//GEN-END:variables

    /**
     * 写卡
     * 
     */
    private void writeCardAction() {
//        CallResult callResult = rwDeviceServiceX.readCard(null);
    }

    /**
     * 读卡
     * 
     */
    private void readCardAction() {
        
        CallResult callResult = null;
        IRwDeviceService rwDeviceService = null;
        try {
            rwDeviceService = getRwDeviceService();
            callResult = rwDeviceService.readCard(null);
        } catch (RwJniException ex) {
            MessageShowUtil.alertErrorMsg("读卡失败," + ex.getMessage());
            return;
        }
        if(callResult.isSuccess()){
            AnalyzeVo vo = (AnalyzeVo) callResult.getObj();
            showReadInfo(vo);
        }else{
            MessageShowUtil.alertErrorMsg("读卡失败！");
        }
    }
    
    /**
     * 查询版本号
     * 
     * @throws RwJniException 
     */
    private void queryVersion() {
        
        CallResult callResult = null;
        IRwDeviceService rwDeviceService = null;
        
        try {
            rwDeviceService = getRwDeviceService();
            callResult = rwDeviceService.getVersions(null);
            
        } catch (RwJniException ex) {
            MessageShowUtil.alertErrorMsg("查询版本异常,"+ex.getMessage());
            return;
        }
        if(!callResult.isSuccess()){
            MessageShowUtil.alertWarnMsg("查询版本失败,"+callResult.getMsg());
            return;
        }
        
        RwVersionVo rwVersionVo = (RwVersionVo) callResult.getObj();
        
        setRwVersionInfo(rwVersionVo);
    }
    
    /**
     * 设置版本信息
     * 
     * @param rwVersionVo 
     */
    private void setRwVersionInfo(RwVersionVo rwVersionVo){
        
        apiVerText.setText(rwVersionVo.getVerApi());
        apiFileVerText.setText(rwVersionVo.getVerApiFile());
        samVerText.setText(rwVersionVo.getVerSamDev());
        samFileVerText.setText(rwVersionVo.getVerSamFile());
        rfFileVerText.setText(rwVersionVo.getVerRfFile());
        rfVerText.setText(rwVersionVo.getVerRfDev());
    }
    
    /**
     * 选择读写器
     * 
     */
    private IRwDeviceService getRwDeviceService() throws RwJniException{
        
        IRwDeviceService rwDeviceService = null;
        
        if(rwCB.getSelectedItem() == null){
            throw new RwJniException("没选择读头！");
        } 
        
        int index = rwCB.getSelectedIndex();
        rwDeviceService = rwDeviceServices[index];
        
        return rwDeviceService;
    }

    /**
     * 查询后显示
     * 
     * @param vo 
     */
    private void showReadInfo(AnalyzeVo vo) {
        
        StringBuffer readTxt = new StringBuffer("");
        readTxt.append("CertificateCode:");
        readTxt.append(vo.getCertificateCode());
        readTxt.append("\nCertificateIscompany:");
        readTxt.append(vo.getCertificateIscompany());
        readTxt.append("\nCertificateIsmetro:");
        readTxt.append(vo.getCertificateIsmetro());
        readTxt.append("\nCertificateName:");
        readTxt.append(vo.getCertificateName());
        readTxt.append("\nCertificateSex:");
        readTxt.append(vo.getCertificateSex());
        readTxt.append("\nCertificateType:");
        readTxt.append(vo.getCertificateType());
        readTxt.append("\nDtDaliyActive:");
        readTxt.append(vo.getDtDaliyActive());
        readTxt.append("\nRfu:");
        readTxt.append(vo.getRfu());
        readTxt.append("\nbCharacter:");
        readTxt.append(vo.getbCharacter());
        readTxt.append("\nbEffectDay:");
        readTxt.append(vo.getbEffectDay());
        readTxt.append("\nbIssueStatus:");
        readTxt.append(vo.getbIssueStatus());
        readTxt.append("\nbStatus:");
        readTxt.append(vo.getbStatus());
        readTxt.append("\ncDateEnd:");
        readTxt.append(vo.getcDateEnd());
        readTxt.append("\ncDateStart:");
        readTxt.append(vo.getcDateStart());
        readTxt.append("\nRfu:");
        readTxt.append(vo.getcEndExpire());
        readTxt.append("\ncIssueDate:");
        readTxt.append(vo.getcIssueDate());
        readTxt.append("\ncTicketType:");
        readTxt.append(vo.getcTicketType());
        readTxt.append("\ncPhysicalID:");
        readTxt.append(vo.getcPhysicalID());
        readTxt.append("\ncLogicalID:");
        readTxt.append(vo.getcLogicalID());
        readTxt.append("\ncLine:");
        readTxt.append(vo.getcLine());
        readTxt.append("\ncLimitMode:");
        readTxt.append(vo.getcLimitMode());
        readTxt.append("\ncLimitExitLine:");
        readTxt.append(vo.getcLimitExitLine());
        readTxt.append("\ncLimitExitStation:");
        readTxt.append(vo.getcLimitExitStation());
        readTxt.append("\ncLimitEntryLine:");
        readTxt.append(vo.getcLimitEntryLine());
        readTxt.append("\ncLimitEntryStation:");
        readTxt.append(vo.getcLimitEntryStation());
        
        readFieldTxt.setText(readTxt.toString());
    }
}
