/*
 * SignCardPanel.java
 *
 * Created on 2014-4-10
 */

package com.goldsign.ecpmcs.ui.panel;

import com.goldsign.csfrm.ui.common.JDatePicker;
import com.goldsign.csfrm.util.DateHelper;
import com.goldsign.csfrm.util.ExcelExport;
import com.goldsign.csfrm.util.MessageShowUtil;
import com.goldsign.csfrm.util.UIUtil;
import com.goldsign.csfrm.vo.SelectOptionVo;
import com.goldsign.ecpmcs.env.AppConstant;
import com.goldsign.ecpmcs.service.ISignCardService;
import com.goldsign.ecpmcs.service.impl.SignCardService;
import com.goldsign.ecpmcs.util.PubUtil;
import com.goldsign.ecpmcs.vo.SignCardVo;
import java.util.Iterator;
import java.util.List;
import java.util.Set;
import javax.swing.JTable;

/**
 * 记名卡信息查询
 * 
 * @author Administrator
 */
public class SignCardPanel extends javax.swing.JPanel {

    private ISignCardService signCardService;
    
    private JTable resultSetTableMain;
    //列宽度
    private int[] columnSize = {200, 70, 160, 40, 210, 140, 260, 100, 140};
    /** Creates new form GenIssueRequestPanel */
    public SignCardPanel() {
        this.signCardService = new SignCardService();
        initComponents();
        initCon();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPnl = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        mainSPn = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabelID = new javax.swing.JLabel();
        IDTxt = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        btQuery = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        javax.swing.JLabel jLabelIDType = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        IDType = new javax.swing.JComboBox();
        begDateCb = new javax.swing.JComboBox();
        endDateCb = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        javax.swing.JLabel jLabelApplyTime = new javax.swing.JLabel();
        javax.swing.JLabel jLabelCardType = new javax.swing.JLabel();
        CardTypeCb = new javax.swing.JComboBox();
        btExport = new javax.swing.JButton();

        setBackground(new java.awt.Color(254, 254, 254));
        setPreferredSize(new java.awt.Dimension(845, 589));

        mainPnl.setBackground(new java.awt.Color(254, 254, 254));
        mainPnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        mainPnl.setPreferredSize(new java.awt.Dimension(807, 74));

        jTextField5.setEditable(false);
        jTextField5.setBackground(new java.awt.Color(185, 227, 241));
        jTextField5.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        jTextField5.setForeground(new java.awt.Color(94, 55, 16));
        jTextField5.setText("   结果列表");
        jTextField5.setAlignmentX(0.0F);
        jTextField5.setAlignmentY(0.0F);
        jTextField5.setBorder(null);

        org.jdesktop.layout.GroupLayout mainPnlLayout = new org.jdesktop.layout.GroupLayout(mainPnl);
        mainPnl.setLayout(mainPnlLayout);
        mainPnlLayout.setHorizontalGroup(
            mainPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTextField5)
            .add(mainSPn)
        );
        mainPnlLayout.setVerticalGroup(
            mainPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainPnlLayout.createSequentialGroup()
                .add(jTextField5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mainSPn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(237, 247, 249));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(792, 105));

        jLabelID.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        jLabelID.setForeground(new java.awt.Color(0, 39, 80));
        jLabelID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelID.setText("  证件号：");

        IDTxt.setFont(new java.awt.Font("宋体", 0, 16)); // NOI18N
        IDTxt.setForeground(new java.awt.Color(70, 95, 125));

        jLabelName.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        jLabelName.setForeground(new java.awt.Color(0, 39, 80));
        jLabelName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelName.setText("姓名：");

        btQuery.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        btQuery.setForeground(new java.awt.Color(0, 39, 80));
        btQuery.setText("查询");
        btQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btQueryActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(185, 227, 241));
        jTextField3.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(94, 55, 16));
        jTextField3.setText("   查询条件");
        jTextField3.setAlignmentX(0.0F);
        jTextField3.setAlignmentY(0.0F);
        jTextField3.setBorder(null);

        jLabelIDType.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        jLabelIDType.setForeground(new java.awt.Color(0, 39, 80));
        jLabelIDType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelIDType.setText(" 证件类型：");

        nameTxt.setFont(new java.awt.Font("宋体", 0, 16)); // NOI18N
        nameTxt.setForeground(new java.awt.Color(70, 95, 125));

        IDType.setFont(new java.awt.Font("宋体", 0, 16)); // NOI18N
        IDType.setForeground(new java.awt.Color(0, 39, 80));

        begDateCb.setFont(new java.awt.Font("宋体", 0, 16)); // NOI18N
        begDateCb.setForeground(new java.awt.Color(70, 95, 125));
        begDateCb.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        begDateCb =new JDatePicker(JDatePicker.STYLE_CN_DATE1);

        endDateCb.setFont(new java.awt.Font("宋体", 0, 16)); // NOI18N
        endDateCb.setForeground(new java.awt.Color(70, 95, 125));
        endDateCb =new JDatePicker(JDatePicker.STYLE_CN_DATE1);

        jLabel4.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 39, 80));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(" - ");

        jLabelApplyTime.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        jLabelApplyTime.setForeground(new java.awt.Color(0, 39, 80));
        jLabelApplyTime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelApplyTime.setText(" 申请时间：");

        jLabelCardType.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        jLabelCardType.setForeground(new java.awt.Color(0, 39, 80));
        jLabelCardType.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelCardType.setText(" 票卡类型：");

        CardTypeCb.setFont(new java.awt.Font("宋体", 0, 16)); // NOI18N
        CardTypeCb.setForeground(new java.awt.Color(0, 39, 80));

        btExport.setFont(new java.awt.Font("宋体", 1, 16)); // NOI18N
        btExport.setForeground(new java.awt.Color(0, 39, 80));
        btExport.setLabel("导出");
        btExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExportActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField3)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabelID)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(IDTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 176, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabelApplyTime)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(begDateCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(endDateCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(45, 45, 45)
                        .add(btQuery, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(35, 35, 35)
                        .add(jLabelName)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(nameTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 114, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabelIDType)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(IDType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabelCardType)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(CardTypeCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 45, Short.MAX_VALUE)
                        .add(btExport, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(7, 7, 7)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btQuery)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(IDTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabelID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabelApplyTime, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(begDateCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(endDateCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabelName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(nameTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabelCardType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(CardTypeCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(btExport))
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabelIDType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(IDType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(11, 11, 11))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
                    .add(mainPnl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(mainPnl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 458, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btQueryActionPerformed
        doQuery();
    }//GEN-LAST:event_btQueryActionPerformed

    private void btExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExportActionPerformed
        doExport();
    }//GEN-LAST:event_btExportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CardTypeCb;
    private javax.swing.JTextField IDTxt;
    private javax.swing.JComboBox IDType;
    private javax.swing.JComboBox begDateCb;
    private javax.swing.JButton btExport;
    private javax.swing.JButton btQuery;
    private javax.swing.JComboBox endDateCb;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelID;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JPanel mainPnl;
    private javax.swing.JScrollPane mainSPn;
    private javax.swing.JTextField nameTxt;
    // End of variables declaration//GEN-END:variables

    /**
     * 取得查询条件
     * 
     * @return 
     */
    private SignCardVo getCallParam(){
        
        SignCardVo param =  new SignCardVo();
        param.setIdentityId(IDTxt.getText().trim());
        param.setApplyName(nameTxt.getText().trim());
        SelectOptionVo IDTypeOption = (SelectOptionVo)IDType.getSelectedItem();
        param.setIdentityType(IDTypeOption.getValue());
        SelectOptionVo CardTypeOption = (SelectOptionVo)CardTypeCb.getSelectedItem();
        if(!CardTypeOption.getValue().equals("") && !(CardTypeOption.getValue()==null)){
            param.setCardMainId(CardTypeOption.getValue().substring(0, 2));
            param.setCardSubId(CardTypeOption.getValue().substring(2, 4));
        }
        param.setBeginTime(DateHelper.str10yyyy_MM_ddToStr8yyyyMMdd(begDateCb.getSelectedItem().toString()));
        param.setEndTime(DateHelper.str10yyyy_MM_ddToStr8yyyyMMdd(endDateCb.getSelectedItem().toString()));
        return param;
    }
    
    /**
     * 查询
     * 
     */
    private void doQuery(){
        //清空提示信息
        MessageShowUtil.infoOpMsg("");
        SignCardVo signCardParam = getCallParam();
        
        if(!checkParam(signCardParam)){
            return;
        }
        
        //查询
        List<Object[]> signCards = signCardService.getSignCardVos(signCardParam);
        
        MessageShowUtil.infoOpMsg("成功查询" + signCards.size() + "条记录");
        
        //生成列表
        genMainResultSetTable(signCards);
        
        //结果大于0时显示导出按钮
        if(signCards.size() > 0){
            PubUtil.setButton(btExport,true);
        }
    }
    
    /**
     * 根据结果集，生成列表
     * 
     * @param result 
     */
    private void genMainResultSetTable(List<Object[]> result) {
        //列名称
        String[] columnNames = {"姓名", "证件类型", "证件号", "性别", "地址", "申请时间", "相片地址", "票卡类型", "有效期"};
        //列宽度
        //int[] columnSize = {70, 70, 160, 40, 210, 140, 230, 70, 70, 140};
        
        //生成列表
        resultSetTableMain = UIUtil.genResultSetTable(this.mainSPn, result, columnNames, columnSize);
    }
    
    /*
     * 表单检验提示
     */
    public boolean checkParam(SignCardVo signCardParam) {
        boolean result = true;

        result = PubUtil.checkQueryTime(signCardParam.getBeginTime(),signCardParam.getEndTime());
        
        return result;
    }

    /**
     * 初始化查询表单
     */
    private void initCon() {
        //添加证件类型下拉内容
        addItemIdentityType();
        //添加票卡类型下拉内容
        addItemTicketType();

        PubUtil.setButton(btExport,false);
    }

    /**
     * 添加证件类型下拉内容
     */
    private void addItemIdentityType() {
        this.IDType.removeAllItems();
        this.IDType.addItem(new SelectOptionVo("", "全部"));
        Set<String> dkey = AppConstant.CERTIFICATE_TYPE.keySet();
        for (Iterator it = dkey.iterator(); it.hasNext();) {
            String s = (String) it.next();
            this.IDType.addItem(new SelectOptionVo(s, String.valueOf(AppConstant.CERTIFICATE_TYPE.get(s))));
        }
    }
    
    /**
     * 添加票卡类型下拉内容
     */
    private void addItemTicketType() {
        this.CardTypeCb.removeAllItems();
        this.CardTypeCb.addItem(new SelectOptionVo("", "全部"));
        Set<String> dkey = AppConstant.TICKET_TYPE.keySet();
        for (Iterator it = dkey.iterator(); it.hasNext();) {
            String s = (String) it.next();
            this.CardTypeCb.addItem(new SelectOptionVo(s, String.valueOf(AppConstant.TICKET_TYPE.get(s))));
        }
    }

   /*
     * 导出查询数据
     */
    private void doExport() {
        //清空提示信息
        MessageShowUtil.infoOpMsg("");
        resultSetTableMain.setName("储值卡信息");
        JTable[] jTables = {resultSetTableMain};  
        //ExcelExport.exportXLSJTable(jTables, this);
        ExcelExport.exportXLSJTableColumnSpread(jTables, this, columnSize);
    }
 
}
