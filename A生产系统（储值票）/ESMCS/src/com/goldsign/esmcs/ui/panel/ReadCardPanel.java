/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReadCardJPanel.java
 *
 * Created on 2011-7-15, 8:32:26
 */

package com.goldsign.esmcs.ui.panel;

import com.goldsign.csfrm.ui.panel.BasePanel;
import com.goldsign.csfrm.util.MessageShowUtil;
import com.goldsign.csfrm.util.StringUtil;
import com.goldsign.csfrm.vo.CallParam;
import com.goldsign.csfrm.vo.CallResult;
import com.goldsign.esmcs.application.Application;
import com.goldsign.esmcs.env.AppConstant;
import com.goldsign.esmcs.env.ConfigConstant;
import com.goldsign.esmcs.env.ErrorConstant;
import com.goldsign.esmcs.exception.RwJniException;
import com.goldsign.esmcs.service.IRwDeviceService;
import com.goldsign.esmcs.service.impl.RwDeviceService;
import com.goldsign.esmcs.util.ConfigUtil;
import com.goldsign.esmcs.util.PubUtil;
import com.goldsign.esmcs.util.Validator;
import com.goldsign.esmcs.vo.AnalyzeVo;
import com.goldsign.esmcs.vo.RwPortParam;
import org.apache.log4j.Logger;

/**
 *
 * @author david.wang
 */
public class ReadCardPanel extends BasePanel {
    
    private static Logger logger = Logger.getLogger(ReadCardPanel.class.getName());

    private IRwDeviceService rwDeviceService;
    
    private IRwDeviceService rwDeviceService2;
    
    private RwPortParam rwPortParam;//读写器配置 
    
    private final static long SLEEP_TIME = 500;//读卡器定时读卡时间间隔
    
    private boolean IS_READING = false;//暂停
    
    private boolean IS_READ_THREAD_RUNNING = false;//是否在跑
    
    private boolean portStatus = false;//关闭
    
    /**
     * 退出时关闭串号
     * 
     * @param callParam
     * @return 
     */
    @Override
    public CallResult closingEventCallBack(CallParam callParam) {
        
        CallResult callResult = new CallResult();
        if(portStatus){
            callResult.setMsg("请关闭读写器串口！");
        }else{
            callResult.setResult(true);
        }
        
        return callResult;
    }
    
    /** Creates new form ReadCardJPanel */
    public ReadCardPanel() {
        
        rwDeviceService2 = new RwDeviceService();
        
        initComponents();
        
        //初始化读头参数
        initRwParam();
        
        //加载下拉
        initPortBox();
        
        //初始化按钮能动性
        initBtnEnables();
    }
    
    /**
     * 初始化读头
     * 
     */
    private void initBtnEnables(){
        openPortButton.setEnabled(true);
        readCardButton.setEnabled(false);
        cancelButton.setEnabled(false);
    }
    
    /**
     * 初始化读头参数
     * 
     */
    private void initRwParam(){
        
        rwPortParam = new RwPortParam();
        rwPortParam.setDeviceId(ConfigUtil.getDeviceNo());
        rwPortParam.setDeviceType(ConfigUtil.getDeviceType());
        rwPortParam.setStationId(ConfigUtil.getStationId());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jlUsedNum = new javax.swing.JLabel();
        certificateIscompany = new javax.swing.JTextField();
        certificateCode = new javax.swing.JTextField();
        certificateName = new javax.swing.JTextField();
        certificateType = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        certificateSex = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        bIssueStatus = new javax.swing.JTextField();
        cTicketType = new javax.swing.JTextField();
        cPhysicalID = new javax.swing.JTextField();
        bStatus = new javax.swing.JTextField();
        cLogicalID = new javax.swing.JTextField();
        bCharacter = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cIssueDate = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        tradeCount = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        lBalance = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        lDeposite = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        cLine = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        cStationNo = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        cStartExpire = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        cEndExpire = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        cDateStart = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        cDateEnd = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        bEffectDay = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        cLimitEntryLine = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        cLimitEntryStation = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        cLimitExitLine = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        cLimitExitStation = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        cLimitMode = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        isContinueCheck = new javax.swing.JCheckBox();
        readCardButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        portListCbox = new javax.swing.JComboBox();
        openPortButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(845, 589));

        jPanel1.setBackground(new java.awt.Color(237, 247, 249));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(807, 280));

        jLabel1.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 39, 80));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("持卡类型：");

        jLabel3.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 39, 80));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("证件号码：");

        jLabel4.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 39, 80));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("姓名：");

        jLabel5.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 39, 80));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("性别：");

        jlUsedNum.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jlUsedNum.setForeground(new java.awt.Color(0, 39, 80));
        jlUsedNum.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jlUsedNum.setText("证件类型：");

        certificateIscompany.setEditable(false);
        certificateIscompany.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        certificateIscompany.setForeground(new java.awt.Color(0, 39, 80));

        certificateCode.setEditable(false);
        certificateCode.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        certificateCode.setForeground(new java.awt.Color(0, 39, 80));

        certificateName.setEditable(false);
        certificateName.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        certificateName.setForeground(new java.awt.Color(0, 39, 80));
        certificateName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                certificateNameActionPerformed(evt);
            }
        });

        certificateType.setEditable(false);
        certificateType.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        certificateType.setForeground(new java.awt.Color(0, 39, 80));

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(185, 227, 241));
        jTextField3.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(94, 55, 16));
        jTextField3.setText("   个人信息");
        jTextField3.setAlignmentX(0.0F);
        jTextField3.setAlignmentY(0.0F);
        jTextField3.setBorder(null);

        certificateSex.setEditable(false);
        certificateSex.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        certificateSex.setForeground(new java.awt.Color(0, 39, 80));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(certificateSex, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(10, 10, 10)
                            .add(certificateIscompany, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jlUsedNum, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(10, 10, 10)
                            .add(certificateType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel1Layout.createSequentialGroup()
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(10, 10, 10)
                            .add(certificateCode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(20, 20, 20)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(10, 10, 10)
                            .add(certificateName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(48, Short.MAX_VALUE))
            .add(jTextField3)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(certificateIscompany, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jlUsedNum, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(certificateType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, certificateCode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, certificateName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(certificateSex, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(237, 247, 249));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setPreferredSize(new java.awt.Dimension(807, 219));

        jLabel10.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 39, 80));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("发行状态：");

        jLabel11.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 39, 80));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("票卡类型：");

        jLabel12.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 39, 80));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("票卡物理卡号：");

        jLabel14.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 39, 80));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("票卡状态：");

        jLabel15.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 39, 80));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("票卡逻辑卡号：");

        jLabel16.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 39, 80));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("票卡物理类型：");

        bIssueStatus.setEditable(false);
        bIssueStatus.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        bIssueStatus.setForeground(new java.awt.Color(0, 39, 80));

        cTicketType.setEditable(false);
        cTicketType.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cTicketType.setForeground(new java.awt.Color(0, 39, 80));

        cPhysicalID.setEditable(false);
        cPhysicalID.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cPhysicalID.setForeground(new java.awt.Color(0, 39, 80));

        bStatus.setEditable(false);
        bStatus.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        bStatus.setForeground(new java.awt.Color(0, 39, 80));

        cLogicalID.setEditable(false);
        cLogicalID.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cLogicalID.setForeground(new java.awt.Color(0, 39, 80));

        bCharacter.setEditable(false);
        bCharacter.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        bCharacter.setForeground(new java.awt.Color(0, 39, 80));

        jLabel18.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 39, 80));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("制票日期：");

        cIssueDate.setEditable(false);
        cIssueDate.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cIssueDate.setForeground(new java.awt.Color(0, 39, 80));

        jLabel19.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 39, 80));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("交易计数：");

        tradeCount.setEditable(false);
        tradeCount.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        tradeCount.setForeground(new java.awt.Color(0, 39, 80));

        jLabel20.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 39, 80));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("余额（分）：");

        lBalance.setEditable(false);
        lBalance.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        lBalance.setForeground(new java.awt.Color(0, 39, 80));

        jLabel21.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 39, 80));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("押金：");

        lDeposite.setEditable(false);
        lDeposite.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        lDeposite.setForeground(new java.awt.Color(0, 39, 80));

        jLabel22.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 39, 80));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("线路：");

        cLine.setEditable(false);
        cLine.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cLine.setForeground(new java.awt.Color(0, 39, 80));

        jLabel23.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 39, 80));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("站点：");

        cStationNo.setEditable(false);
        cStationNo.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cStationNo.setForeground(new java.awt.Color(0, 39, 80));

        jLabel24.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 39, 80));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("物理有效开始时间：");

        cStartExpire.setEditable(false);
        cStartExpire.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cStartExpire.setForeground(new java.awt.Color(0, 39, 80));
        cStartExpire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cStartExpireActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 39, 80));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("物理有效结束时间：");

        cEndExpire.setEditable(false);
        cEndExpire.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cEndExpire.setForeground(new java.awt.Color(0, 39, 80));

        jLabel26.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 39, 80));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("逻辑有效开始时间：");

        cDateStart.setEditable(false);
        cDateStart.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cDateStart.setForeground(new java.awt.Color(0, 39, 80));
        cDateStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cDateStartActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 39, 80));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("逻辑有效结束时间：");

        cDateEnd.setEditable(false);
        cDateEnd.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cDateEnd.setForeground(new java.awt.Color(0, 39, 80));

        jLabel28.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 39, 80));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("多日票有效天数：");

        bEffectDay.setEditable(false);
        bEffectDay.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        bEffectDay.setForeground(new java.awt.Color(0, 39, 80));

        jLabel29.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 39, 80));
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("限制进站线路：");

        cLimitEntryLine.setEditable(false);
        cLimitEntryLine.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cLimitEntryLine.setForeground(new java.awt.Color(0, 39, 80));

        jLabel30.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 39, 80));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("限制进站站点：");

        cLimitEntryStation.setEditable(false);
        cLimitEntryStation.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cLimitEntryStation.setForeground(new java.awt.Color(0, 39, 80));

        jLabel31.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 39, 80));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("限制出站线路：");

        cLimitExitLine.setEditable(false);
        cLimitExitLine.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cLimitExitLine.setForeground(new java.awt.Color(0, 39, 80));

        jLabel32.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 39, 80));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel32.setText("限制出站站点：");

        cLimitExitStation.setEditable(false);
        cLimitExitStation.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cLimitExitStation.setForeground(new java.awt.Color(0, 39, 80));

        jLabel33.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 39, 80));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel33.setText(" 限制模式：");

        cLimitMode.setEditable(false);
        cLimitMode.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        cLimitMode.setForeground(new java.awt.Color(0, 39, 80));

        jTextField4.setEditable(false);
        jTextField4.setBackground(new java.awt.Color(185, 227, 241));
        jTextField4.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        jTextField4.setForeground(new java.awt.Color(94, 55, 16));
        jTextField4.setText("   票卡信息");
        jTextField4.setAlignmentX(0.0F);
        jTextField4.setAlignmentY(0.0F);
        jTextField4.setBorder(null);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(10, 10, 10)
                        .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cPhysicalID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)
                        .add(jLabel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(bCharacter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(bIssueStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(bStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cTicketType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)
                        .add(jLabel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cLogicalID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cIssueDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)
                        .add(jLabel19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(tradeCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(lBalance, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)
                        .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(lDeposite, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cLine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20)
                        .add(jLabel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cStationNo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cStartExpire, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 146, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cEndExpire, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jLabel26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cDateStart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cDateEnd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(jLabel28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(bEffectDay, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 207, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(32, 32, 32)
                                .add(jLabel29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(cLimitEntryLine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel2Layout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(jLabel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(10, 10, 10)
                                .add(cLimitMode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(10, 10, 10)
                                .add(cLimitEntryStation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(2, 2, 2))))
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(32, 32, 32)
                        .add(jLabel31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 130, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cLimitExitLine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(jLabel32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(10, 10, 10)
                        .add(cLimitExitStation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(2, 2, 2)))
                .addContainerGap(46, Short.MAX_VALUE))
            .add(jTextField4)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(bIssueStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jLabel14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(bStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel11, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cTicketType, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cLogicalID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cPhysicalID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(bCharacter, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cIssueDate, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(tradeCount, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(lBalance, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(lDeposite, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cLine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cStationNo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel24, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cStartExpire, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cEndExpire, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cDateStart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cDateEnd, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cLimitMode, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jLabel28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, bEffectDay, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cLimitEntryLine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cLimitEntryStation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(jLabel31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(cLimitExitLine, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cLimitExitStation, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cancelButton.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        cancelButton.setText("取消");
        cancelButton.setEnabled(false);
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelAllAction(evt);
            }
        });

        isContinueCheck.setBackground(new java.awt.Color(254, 254, 254));
        isContinueCheck.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        isContinueCheck.setForeground(new java.awt.Color(0, 39, 80));
        isContinueCheck.setSelected(true);
        isContinueCheck.setText("连续读卡");
        isContinueCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isContinueCheckActionPerformed(evt);
            }
        });

        readCardButton.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        readCardButton.setText("读卡");
        readCardButton.setEnabled(false);
        readCardButton.setName("btCmtReadCard"); // NOI18N
        readCardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readCardAction(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 39, 80));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("串口号:");

        portListCbox.setEditable(true);
        portListCbox.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        portListCbox.setForeground(new java.awt.Color(0, 39, 80));

        openPortButton.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        openPortButton.setText("打开");
        openPortButton.setName("btCmtReadCard"); // NOI18N
        openPortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openPortAction(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)
                            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 792, Short.MAX_VALUE)))
                    .add(layout.createSequentialGroup()
                        .add(31, 31, 31)
                        .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(portListCbox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(25, 25, 25)
                        .add(openPortButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(91, 91, 91)
                        .add(readCardButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(36, 36, 36)
                        .add(cancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 85, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(isContinueCheck)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 384, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(readCardButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(portListCbox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(openPortButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 36, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(isContinueCheck))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 取消读卡动作
     * 
     * @param evt 
     */
    private void cancelAllAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelAllAction
        cancelAction();
    }//GEN-LAST:event_cancelAllAction

    /**
     * 读卡
     * 
     * @param evt 
     */
    private void readCardAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readCardAction
        readCard();
    }//GEN-LAST:event_readCardAction

    /**
     * 打开串口
     * 
     * @param evt 
     */
    private void openPortAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openPortAction
        
        if(!portStatus){           
            openPort();//打开端口
        }else{
            closePort();//关闭端口
        }
        
    }//GEN-LAST:event_openPortAction

    private void isContinueCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isContinueCheckActionPerformed
        
    }//GEN-LAST:event_isContinueCheckActionPerformed

    private void certificateNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_certificateNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_certificateNameActionPerformed

    private void cStartExpireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cStartExpireActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cStartExpireActionPerformed

    private void cDateStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cDateStartActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cDateStartActionPerformed

    /**
     * 连续读卡判断入口
     * 
     */
    private void readCard(){
        
        if(isContinueCheck.isSelected()){
            setReadMoreCardStatus();
            readCardThread();
        }else{
            doRead();
        }
    }
    
    /**
     * 设置连续读卡时状态
     */
    private void setReadMoreCardStatus(){
        
        readCardButton.setEnabled(false);
        cancelButton.setEnabled(true);
        isContinueCheck.setEnabled(false);
    }
            
    /**
     * 连续读卡
     * 
     */
    private void readCardThread() {
        
        new Thread(){
            public void run(){
                
                IS_READING = true;
                IS_READ_THREAD_RUNNING = true;
                
                while (IS_READING) {
                    if(!isContinueCheck.isSelected()){
                        cancelAction();
                    }
                    doRead();
                    try {
                        this.sleep(SLEEP_TIME);
                    } catch (Exception ex) {
                        logger.error(ex);
                    }
                }
                IS_READ_THREAD_RUNNING = false;
            }  
        }.start();  
    }
    
    /**
     * 读卡
     * 
     * @return 
     */
    private void doRead(){
        
        CallResult callResult = null;
        try {
            callResult = rwDeviceService.readCard(null);
        } catch (RwJniException ex) {
            clearReadCardInfo();
            MessageShowUtil.alertErrorMsg("读卡异常,"+ex.getMessage());
            return;
        }
        
        if(!callResult.isSuccess()){
            clearReadCardInfo();
            if(callResult.getCode().startsWith(ErrorConstant.RW_CALL_ERROR_NO_CARD)){
                MessageShowUtil.errorOpMsg("请放票卡...");
            }else{
                MessageShowUtil.errorOpMsg("读卡失败：" + callResult.getMsg());
            }
            return;
        }
        MessageShowUtil.infoOpMsg("票卡分析成功！");
        AnalyzeVo analyzeVo = (AnalyzeVo) callResult.getObj();
        setReadCardInfo(analyzeVo);

    }
    
    /**
     * 更新界面
     * 
     * @param analyzeVo 
     */
    private void setReadCardInfo(AnalyzeVo analyzeVo){
        
        bIssueStatus.setText(PubUtil.getMapString(AppConstant.ISSUE_STATUS, analyzeVo.getbIssueStatus().trim()));
        bStatus.setText(PubUtil.getMapString(AppConstant.TICKET_STATUS, analyzeVo.getbStatus().trim()));
        if( analyzeVo.getcTicketType()!=null&&analyzeVo.getcTicketType().trim().length()>1){
            cTicketType.setText(PubUtil.getMapString(AppConstant.TICKET_TYPE, analyzeVo.getcTicketType().trim()));
        }
        cLogicalID.setText(analyzeVo.getcLogicalID().trim());
        cPhysicalID.setText(analyzeVo.getcPhysicalID().trim());       
        bCharacter.setText(PubUtil.getMapString(AppConstant.PHY_CHARACTER, analyzeVo.getbCharacter().trim()));        
        cIssueDate.setText(analyzeVo.getcIssueDate().trim());
        tradeCount.setText(analyzeVo.getTradeCount()+"");
        lBalance.setText(analyzeVo.getlBalance()+"");
        lDeposite.setText(analyzeVo.getlDeposite()+"");
        cLine.setText(PubUtil.getMapString(AppConstant.C_LINE, analyzeVo.getcLine().trim()));
        cStationNo.setText(PubUtil.getMapString(AppConstant.C_STATION_NO, analyzeVo.getcStationNo().trim()));        
        if(Validator.contain(AppConstant.CARD_TYPE_TOKEN, analyzeVo.getcTicketType().trim())){
           // cDateStart.setText(analyzeVo.getcIssueDate().trim());
            cStartExpire.setText("");//limj
            jLabel24.setEnabled(false);//limj
            cEndExpire.setText("");//limj
            jLabel25.setEnabled(false);//limj
        }else{
            cStartExpire.setText(analyzeVo.getcStartExpire().trim());
            cStartExpire.setEnabled(true);//limj
            cEndExpire.setText(analyzeVo.getcEndExpire().trim());
            cEndExpire.setEnabled(true);//limj
            
        }
        
        cDateStart.setText(analyzeVo.getcDateStart().trim());
        cDateEnd.setText(analyzeVo.getcDateEnd().trim());
        bEffectDay.setText(analyzeVo.getbEffectDay().trim());
        cLimitEntryLine.setText(PubUtil.getMapString(AppConstant.C_LINE, analyzeVo.getcLimitEntryLine().trim()));
        cLimitEntryStation.setText(PubUtil.getMapString(AppConstant.C_STATION_NO, analyzeVo.getcLimitEntryStation().trim()));
        cLimitExitLine.setText(PubUtil.getMapString(AppConstant.C_LINE, analyzeVo.getcLimitExitLine().trim()));
        cLimitExitStation.setText(PubUtil.getMapString(AppConstant.C_STATION_NO, analyzeVo.getcLimitExitStation().trim()));
        cLimitMode.setText(PubUtil.getMapString(AppConstant.C_LIMIT_MODE, analyzeVo.getcLimitMode().trim()));
        certificateIscompany.setText(PubUtil.getMapString(AppConstant.CERTIFICATE_ISCOMPANY, analyzeVo.getCertificateIscompany().trim()));
       // certificateIsmetro.setText(PubUtil.getMapString(AppConstant.CERTIFICATE_ISMETRO, analyzeVo.getCertificateIsmetro().trim()));
        certificateName.setText(analyzeVo.getCertificateName().trim());
        certificateCode.setText(analyzeVo.getCertificateCode().trim());
        certificateType.setText(PubUtil.getMapString(AppConstant.CERTIFICATE_TYPE, analyzeVo.getCertificateType().trim()));
        certificateSex.setText(PubUtil.getMapString(AppConstant.CERTIFICATE_SEX,analyzeVo.getCertificateSex().trim()));  
    }
    
    /**
     * 清除信息
     * 
     */
    private void clearReadCardInfo(){
        
        bIssueStatus.setText("");
        bStatus.setText("");
        cTicketType.setText("");
        cLogicalID.setText("");
        cPhysicalID.setText("");
        bCharacter.setText("");
        cIssueDate.setText("");
        tradeCount.setText("");
        lBalance.setText("");
        lDeposite.setText("");
        cLine.setText("");
        cStationNo.setText("");
        cStartExpire.setText("");
        cEndExpire.setText("");
        cDateStart.setText("");
        cDateEnd.setText("");
        bEffectDay.setText("");
        cLimitEntryLine.setText("");
        cLimitEntryStation.setText("");
        cLimitExitLine.setText("");
        cLimitExitStation.setText("");
        cLimitMode.setText("");
        certificateIscompany.setText("");
       // certificateIsmetro.setText("");
        certificateName.setText("");
        certificateCode.setText("");
        certificateType.setText("");
        certificateSex.setText("");  
    }

    /**
     * 取消
     * 
     */
    private void cancelAction() {
        
        cancelButton.setEnabled(false);
        IS_READING = false;
        while(IS_READ_THREAD_RUNNING){
            try {
                Thread.sleep(100);
            } catch (InterruptedException ex) {
                logger.error(ex);
            }
        }
        readCardButton.setEnabled(true);
        isContinueCheck.setEnabled(true);
    }
    
    /**
     * 加载串口下拉
     * 
     */
    private void initPortBox() {
        
        portListCbox.removeAllItems();
        String exPort = ConfigUtil.getConfigValue(ConfigConstant.RwDeviceTag, ConfigConstant.ExRwPortTag);
        portListCbox.addItem(exPort);
    }
    
    /**
     * 检查端口
     * 
     * @param port
     * @return 
     */
    private boolean checkPort(String port){
                
        if(!port.startsWith("COM")){
            MessageShowUtil.alertWarnMsg("端口号格式不正格，应为COM加数字！");
            return false;
        }
        String num = port.substring(3);
        if(!StringUtil.isInt(num)){
            MessageShowUtil.alertWarnMsg("端口号格式不正格，应为COM加数字！");
            return false;
        }
        
        return true;
    }
    
    /**
     * 打开串口
     * 
     */
    private void openPort(){
        
        String port = portListCbox.getSelectedItem().toString();
        if(!checkPort(port)){
            return;
        }
        
        try {
            rwPortParam.setPort(port);//选择串口
            CallResult callResult = null;
            if(((Application) AppConstant.application).isRunHandMakeModeSameCom(port)){
                rwDeviceService = ((Application) AppConstant.application).getRwDeviceServices()[0];
                callResult = new CallResult(true);
            }else{
                rwDeviceService = rwDeviceService2;
                callResult = rwDeviceService.openRwPort(rwPortParam);
            }
            if(callResult.isSuccess()){
                setPortOpenStatus();//设置端号打开状态
                MessageShowUtil.alertInfoMsg("打开端口成功！");
            }else{
                MessageShowUtil.alertErrorMsg("打开端口失败！");
            }
        } catch (RwJniException ex) {
            logger.error(ex);
        }
    }
    
    /**
     * 设置端口打开状态
     * 
     */
    private void setPortOpenStatus(){
    
        this.portStatus = true;
        openPortButton.setText("关闭");
        readCardButton.setEnabled(true);
        cancelButton.setEnabled(false);

    }
    
    /**
     * 设置端口关闭状态
     * 
     */
    private void setPortCloseStatus(){
    
        this.portStatus = false;
        openPortButton.setText("打开");
        readCardButton.setEnabled(false);
        cancelButton.setEnabled(false);

    }
    
    /**
     * 关闭串口
     * 
     * @return 
     */
    private void closePort(){
        
        if(IS_READING){
            MessageShowUtil.alertInfoMsg("正在读卡，不能关闭端口！");
            return;
        }
        try {
            CallResult callResult = null;
            String port = rwPortParam.getPort();
            if( !((Application) AppConstant.application).isRunHandMakeModeSameCom(port) ){
                callResult = rwDeviceService.closeRwPort(rwPortParam);
            }
            setPortCloseStatus();
            MessageShowUtil.alertInfoMsg("关闭端口成功！");
            
        } catch (RwJniException ex) {
            logger.error(ex);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bCharacter;
    private javax.swing.JTextField bEffectDay;
    private javax.swing.JTextField bIssueStatus;
    private javax.swing.JTextField bStatus;
    private javax.swing.JTextField cDateEnd;
    private javax.swing.JTextField cDateStart;
    private javax.swing.JTextField cEndExpire;
    private javax.swing.JTextField cIssueDate;
    private javax.swing.JTextField cLimitEntryLine;
    private javax.swing.JTextField cLimitEntryStation;
    private javax.swing.JTextField cLimitExitLine;
    private javax.swing.JTextField cLimitExitStation;
    private javax.swing.JTextField cLimitMode;
    private javax.swing.JTextField cLine;
    private javax.swing.JTextField cLogicalID;
    private javax.swing.JTextField cPhysicalID;
    private javax.swing.JTextField cStartExpire;
    private javax.swing.JTextField cStationNo;
    private javax.swing.JTextField cTicketType;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField certificateCode;
    private javax.swing.JTextField certificateIscompany;
    private javax.swing.JTextField certificateName;
    private javax.swing.JTextField certificateSex;
    private javax.swing.JTextField certificateType;
    private javax.swing.JCheckBox isContinueCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel jlUsedNum;
    private javax.swing.JTextField lBalance;
    private javax.swing.JTextField lDeposite;
    private javax.swing.JButton openPortButton;
    private javax.swing.JComboBox portListCbox;
    private javax.swing.JButton readCardButton;
    private javax.swing.JTextField tradeCount;
    // End of variables declaration//GEN-END:variables

}
