package com.goldsign.esmcs.ui.dialog;

import com.goldsign.csfrm.ui.common.JDatePicker;
import com.goldsign.csfrm.ui.common.LengthLimitDocument;
import com.goldsign.csfrm.ui.common.NumberDocument;
import com.goldsign.csfrm.util.MessageShowUtil;
import com.goldsign.csfrm.util.UIUtil;
import com.goldsign.csfrm.vo.KeyValueVo;
import com.goldsign.csfrm.vo.SelectOptionVo;
import com.goldsign.esmcs.env.AppConstant;
import com.goldsign.esmcs.env.PKAppConstant;
import com.goldsign.esmcs.thread.PKSortCardThread;
import com.goldsign.esmcs.vo.*;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import org.apache.log4j.Logger;

/**
 * 制卡对话框
 * 
 * @author lenvo
 */
public class PKSortCardDialog extends PKMakeCardDialog {

    private static Logger logger = Logger.getLogger(PKSortCardDialog.class.getName());

    private SortCardCondVo sortCardCondVo = new SortCardCondVo();//分拣条件
    
    public PKSortCardDialog() { 
        super(null);

    }
    
    /**
     * 初始化界面参数
     *
     */
    @Override
    protected void initUiParam() {
        
        initComponents();

        initOrderParam();
        
        initSortParam();

        //初始化票箱参数
        initBoxParam();
        //
        initSiteStatus();
        //初始化按钮
        initBtnEnable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        box1TypeBG = new javax.swing.ButtonGroup();
        box2TypeBG = new javax.swing.ButtonGroup();
        box3TypeBG = new javax.swing.ButtonGroup();
        box4TypeBG = new javax.swing.ButtonGroup();
        box5TypeBG = new javax.swing.ButtonGroup();
        box5StatusBG = new javax.swing.ButtonGroup();
        box4StatusBG = new javax.swing.ButtonGroup();
        box3StatusBG = new javax.swing.ButtonGroup();
        box2StatusBG = new javax.swing.ButtonGroup();
        box1StatusBG = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        cardBeginSeqTxt = new javax.swing.JTextField();
        issueStatusCB = new javax.swing.JComboBox();
        cardTypeCb = new javax.swing.JComboBox();
        issueBeginDateCb = new javax.swing.JComboBox();
        issueEndDateCb = new javax.swing.JComboBox();
        cardStatusCB = new javax.swing.JComboBox();
        isBadCb = new javax.swing.JComboBox();
        cardEndSeqTxt = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        lifeBeginCycleTxt = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        lifeEndCycleTxt = new javax.swing.JTextField();
        issueBeginDateCk = new javax.swing.JCheckBox();
        issueEndDateCk = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        boxAllResetBtn = new javax.swing.JButton();
        boxAllUnloadBtn = new javax.swing.JButton();
        jPanel38 = new javax.swing.JPanel();
        box5ResetBtn = new javax.swing.JButton();
        box5UnloadBtn = new javax.swing.JButton();
        box5TypeInvalRB = new javax.swing.JRadioButton();
        box5TypeNormalRB = new javax.swing.JRadioButton();
        box5TotalNumTxt = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        box5CurrentNumTxt = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        box5StatusPB = new javax.swing.JProgressBar();
        jPanel39 = new javax.swing.JPanel();
        box1ResetBtn = new javax.swing.JButton();
        box1UnloadBtn = new javax.swing.JButton();
        box1TypeInvalRB = new javax.swing.JRadioButton();
        box1TypeNormalRB = new javax.swing.JRadioButton();
        box1TotalNumTxt = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        box1CurrentNumTxt = new javax.swing.JTextField();
        box1StatusPB = new javax.swing.JProgressBar();
        jLabel54 = new javax.swing.JLabel();
        jPanel40 = new javax.swing.JPanel();
        box2ResetBtn = new javax.swing.JButton();
        box2UnloadBtn = new javax.swing.JButton();
        box2TypeInvalRB = new javax.swing.JRadioButton();
        box2TypeNormalRB = new javax.swing.JRadioButton();
        box2TotalNumTxt = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        box2CurrentNumTxt = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        box2StatusPB = new javax.swing.JProgressBar();
        jPanel41 = new javax.swing.JPanel();
        box3ResetBtn = new javax.swing.JButton();
        box3UnloadBtn = new javax.swing.JButton();
        box3TypeInvalRB = new javax.swing.JRadioButton();
        box3TypeNormalRB = new javax.swing.JRadioButton();
        box3TotalNumTxt = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        box3CurrentNumTxt = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        box3StatusPB = new javax.swing.JProgressBar();
        jPanel42 = new javax.swing.JPanel();
        box4ResetBtn = new javax.swing.JButton();
        box4UnloadBtn = new javax.swing.JButton();
        box4TypeInvalRB = new javax.swing.JRadioButton();
        box4TypeNormalRB = new javax.swing.JRadioButton();
        box4TotalNumTxt = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        box4CurrentNumTxt = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        box4StatusPB = new javax.swing.JProgressBar();
        channelResetBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        pauseBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        progressBar = new javax.swing.JProgressBar();
        resumeBtn = new javax.swing.JButton();
        runBtn = new javax.swing.JButton();
        infoMsgLbl = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        finishNumTxt = new javax.swing.JTextField();
        goodCardNumTxt = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        badCardNumTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(91, 148, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel1.setPreferredSize(new java.awt.Dimension(1024, 768));

        jPanel4.setBackground(java.awt.Color.blue);
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "任务信息", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 20), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(978, 90));

        jLabel20.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("票卡类型：");

        jLabel21.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("至：");

        jLabel27.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("卡序号段：");

        jLabel28.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("至：");

        jLabel17.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("发行日期：");

        jLabel29.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel29.setText("是否损坏：");

        jLabel30.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel30.setText("发行状态：");

        jLabel31.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel31.setText("卡片状态：");

        cardBeginSeqTxt.setDocument(new LengthLimitDocument(8,true,false));
        cardBeginSeqTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardBeginSeqTxt.setForeground(new java.awt.Color(0, 39, 80));
        cardBeginSeqTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        issueStatusCB.setEditable(true);
        issueStatusCB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        issueStatusCB.setForeground(new java.awt.Color(0, 39, 80));

        cardTypeCb.setEditable(true);
        cardTypeCb.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardTypeCb.setForeground(new java.awt.Color(0, 39, 80));

        issueBeginDateCb.setEditable(true);
        issueBeginDateCb.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        issueBeginDateCb.setForeground(new java.awt.Color(0, 39, 80));
        issueBeginDateCb =new JDatePicker(JDatePicker.STYLE_CN_DATE1,new Date(),new java.awt.Font("宋体", 1, 20));

        issueEndDateCb.setEditable(true);
        issueEndDateCb.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        issueEndDateCb.setForeground(new java.awt.Color(0, 39, 80));
        issueEndDateCb =new JDatePicker(JDatePicker.STYLE_CN_DATE1,new Date(),new java.awt.Font("宋体", 1, 20));

        cardStatusCB.setEditable(true);
        cardStatusCB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardStatusCB.setForeground(new java.awt.Color(0, 39, 80));

        isBadCb.setEditable(true);
        isBadCb.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        isBadCb.setForeground(new java.awt.Color(0, 39, 80));

        cardEndSeqTxt.setDocument(new LengthLimitDocument(8,true,false));
        cardEndSeqTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        cardEndSeqTxt.setForeground(new java.awt.Color(0, 39, 80));
        cardEndSeqTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel26.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("交易计数：");

        lifeBeginCycleTxt.setDocument(new NumberDocument(6,0));
        lifeBeginCycleTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        lifeBeginCycleTxt.setForeground(new java.awt.Color(0, 39, 80));
        lifeBeginCycleTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel23.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("～");

        lifeEndCycleTxt.setDocument(new NumberDocument(6,0));
        lifeEndCycleTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        lifeEndCycleTxt.setForeground(new java.awt.Color(0, 39, 80));
        lifeEndCycleTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        issueBeginDateCk.setOpaque(false);
        issueBeginDateCk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueBeginDateCkActionPerformed(evt);
            }
        });

        issueEndDateCk.setOpaque(false);
        issueEndDateCk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                issueEndDateCkActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel20)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel30))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(issueStatusCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cardTypeCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jLabel31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 126, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(3, 3, 3)
                        .add(cardStatusCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(33, 33, 33)
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel4Layout.createSequentialGroup()
                            .add(1, 1, 1)
                            .add(jLabel27)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(cardBeginSeqTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(jPanel4Layout.createSequentialGroup()
                            .add(jLabel17)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(issueBeginDateCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jLabel26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 131, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(lifeBeginCycleTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(15, 15, 15)
                        .add(jLabel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(lifeEndCycleTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(31, 31, 31)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                                .add(jLabel28, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(cardEndSeqTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                                .add(jLabel29)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(isBadCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(issueBeginDateCk)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
                        .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 119, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(issueEndDateCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 160, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(issueEndDateCk)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel17)
                                .add(issueBeginDateCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel21)
                                .add(issueEndDateCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(issueStatusCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel30)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel20)
                            .add(cardTypeCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel27)
                            .add(jLabel28)
                            .add(cardBeginSeqTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cardEndSeqTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel29)
                                    .add(jLabel31)
                                    .add(cardStatusCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(isBadCb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(jPanel4Layout.createSequentialGroup()
                                    .add(jLabel26)
                                    .add(1, 1, 1)))
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                .add(lifeBeginCycleTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel23)
                                .add(lifeEndCycleTxt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(issueBeginDateCk)
                            .add(issueEndDateCk))))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(java.awt.Color.blue);
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "设备操作", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 20), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel5.setOpaque(false);
        jPanel5.setPreferredSize(new java.awt.Dimension(978, 90));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        boxAllResetBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        boxAllResetBtn.setText("复位票箱");
        boxAllResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxAllResetBtnActionPerformed(evt);
            }
        });
        jPanel5.add(boxAllResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 340, -1, -1));

        boxAllUnloadBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        boxAllUnloadBtn.setText("拆卸票箱");
        boxAllUnloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxAllUnloadBtnActionPerformed(evt);
            }
        });
        jPanel5.add(boxAllUnloadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, -1, -1));

        jPanel38.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(251, 216, 182), 1, true), "5号票箱", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel38.setOpaque(false);
        jPanel38.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        box5ResetBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box5ResetBtn.setText("复位");
        box5ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box5ResetBtnActionPerformed(evt);
            }
        });
        jPanel38.add(box5ResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 20, -1, -1));

        box5UnloadBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box5UnloadBtn.setText("拆卸");
        box5UnloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box5UnloadBtnActionPerformed(evt);
            }
        });
        jPanel38.add(box5UnloadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, -1, -1));

        box5TypeInvalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box5TypeInvalRB.setForeground(new java.awt.Color(94, 55, 16));
        box5TypeInvalRB.setSelected(true);
        box5TypeInvalRB.setText("废票");
        box5TypeInvalRB.setOpaque(false);
        box5TypeInvalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box5TypeInvalRBActionPerformed(evt);
            }
        });
        jPanel38.add(box5TypeInvalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        box5TypeNormalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box5TypeNormalRB.setForeground(new java.awt.Color(94, 55, 16));
        box5TypeNormalRB.setText("正常");
        box5TypeNormalRB.setOpaque(false);
        box5TypeNormalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box5TypeNormalRBActionPerformed(evt);
            }
        });
        jPanel38.add(box5TypeNormalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        box5TotalNumTxt.setDocument(new NumberDocument(3,0));
        box5TotalNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box5TotalNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box5TotalNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box5TotalNumTxt.setText("500");
        box5TotalNumTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                box5TotalNumTxtFocusLost(evt);
            }
        });
        jPanel38.add(box5TotalNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 120, 30));

        jLabel47.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel47.setText("容量：");
        jPanel38.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, 30));

        jLabel49.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel49.setText("数量：");
        jPanel38.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, 30));

        box5CurrentNumTxt.setEditable(false);
        box5CurrentNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box5CurrentNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box5CurrentNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box5CurrentNumTxt.setText("0");
        jPanel38.add(box5CurrentNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 120, 30));

        jLabel63.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel63.setText("状态：");
        jPanel38.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, 30));

        box5StatusPB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box5StatusPB.setForeground(java.awt.Color.green);
        box5StatusPB.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        box5StatusPB.setStringPainted(true);
        jPanel38.add(box5StatusPB, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 120, 30));

        jPanel5.add(jPanel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 980, 60));

        jPanel39.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(251, 216, 182), 1, true), "1号票箱", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel39.setOpaque(false);
        jPanel39.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        box1ResetBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box1ResetBtn.setText("复位");
        box1ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box1ResetBtnActionPerformed(evt);
            }
        });
        jPanel39.add(box1ResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 20, -1, -1));

        box1UnloadBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box1UnloadBtn.setText("拆卸");
        box1UnloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box1UnloadBtnActionPerformed(evt);
            }
        });
        jPanel39.add(box1UnloadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, -1, -1));

        box1TypeInvalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box1TypeInvalRB.setForeground(new java.awt.Color(94, 55, 16));
        box1TypeInvalRB.setText("废票");
        box1TypeInvalRB.setOpaque(false);
        box1TypeInvalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box1TypeInvalRBActionPerformed(evt);
            }
        });
        jPanel39.add(box1TypeInvalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        box1TypeNormalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box1TypeNormalRB.setForeground(new java.awt.Color(94, 55, 16));
        box1TypeNormalRB.setSelected(true);
        box1TypeNormalRB.setText("正常");
        box1TypeNormalRB.setOpaque(false);
        box1TypeNormalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box1TypeNormalRBActionPerformed(evt);
            }
        });
        jPanel39.add(box1TypeNormalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        box1TotalNumTxt.setDocument(new NumberDocument(3,0));
        box1TotalNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box1TotalNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box1TotalNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box1TotalNumTxt.setText("500");
        box1TotalNumTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                box1TotalNumTxtFocusLost(evt);
            }
        });
        jPanel39.add(box1TotalNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 120, 30));

        jLabel50.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel50.setText("容量：");
        jPanel39.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, 30));

        jLabel52.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel52.setText("状态：");
        jPanel39.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, 30));

        box1CurrentNumTxt.setEditable(false);
        box1CurrentNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box1CurrentNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box1CurrentNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box1CurrentNumTxt.setText("0");
        jPanel39.add(box1CurrentNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 120, 30));

        box1StatusPB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box1StatusPB.setForeground(java.awt.Color.green);
        box1StatusPB.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        box1StatusPB.setStringPainted(true);
        jPanel39.add(box1StatusPB, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 120, 30));

        jLabel54.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel54.setText("数量：");
        jPanel39.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, 30));

        jPanel5.add(jPanel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 980, 60));

        jPanel40.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(251, 216, 182), 1, true), "2号票箱", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel40.setOpaque(false);
        jPanel40.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        box2ResetBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box2ResetBtn.setText("复位");
        box2ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box2ResetBtnActionPerformed(evt);
            }
        });
        jPanel40.add(box2ResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 20, -1, -1));

        box2UnloadBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box2UnloadBtn.setText("拆卸");
        box2UnloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box2UnloadBtnActionPerformed(evt);
            }
        });
        jPanel40.add(box2UnloadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, -1, -1));

        box2TypeInvalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box2TypeInvalRB.setForeground(new java.awt.Color(94, 55, 16));
        box2TypeInvalRB.setText("废票");
        box2TypeInvalRB.setOpaque(false);
        box2TypeInvalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box2TypeInvalRBActionPerformed(evt);
            }
        });
        jPanel40.add(box2TypeInvalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        box2TypeNormalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box2TypeNormalRB.setForeground(new java.awt.Color(94, 55, 16));
        box2TypeNormalRB.setSelected(true);
        box2TypeNormalRB.setText("正常");
        box2TypeNormalRB.setOpaque(false);
        box2TypeNormalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box2TypeNormalRBActionPerformed(evt);
            }
        });
        jPanel40.add(box2TypeNormalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        box2TotalNumTxt.setDocument(new NumberDocument(3,0));
        box2TotalNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box2TotalNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box2TotalNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box2TotalNumTxt.setText("500");
        box2TotalNumTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                box2TotalNumTxtFocusLost(evt);
            }
        });
        jPanel40.add(box2TotalNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 120, 30));

        jLabel53.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel53.setText("容量：");
        jPanel40.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, 30));

        jLabel55.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel55.setText("数量：");
        jPanel40.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, 30));

        box2CurrentNumTxt.setEditable(false);
        box2CurrentNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box2CurrentNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box2CurrentNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box2CurrentNumTxt.setText("0");
        jPanel40.add(box2CurrentNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 120, 30));

        jLabel57.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel57.setText("状态：");
        jPanel40.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, 30));

        box2StatusPB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box2StatusPB.setForeground(java.awt.Color.green);
        box2StatusPB.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        box2StatusPB.setStringPainted(true);
        jPanel40.add(box2StatusPB, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 120, 30));

        jPanel5.add(jPanel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 980, 60));

        jPanel41.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(251, 216, 182), 1, true), "3号票箱", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel41.setOpaque(false);
        jPanel41.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        box3ResetBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box3ResetBtn.setText("复位");
        box3ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box3ResetBtnActionPerformed(evt);
            }
        });
        jPanel41.add(box3ResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 20, -1, -1));

        box3UnloadBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box3UnloadBtn.setText("拆卸");
        box3UnloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box3UnloadBtnActionPerformed(evt);
            }
        });
        jPanel41.add(box3UnloadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, -1, -1));

        box3TypeInvalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box3TypeInvalRB.setForeground(new java.awt.Color(94, 55, 16));
        box3TypeInvalRB.setText("废票");
        box3TypeInvalRB.setOpaque(false);
        box3TypeInvalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box3TypeInvalRBActionPerformed(evt);
            }
        });
        jPanel41.add(box3TypeInvalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        box3TypeNormalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box3TypeNormalRB.setForeground(new java.awt.Color(94, 55, 16));
        box3TypeNormalRB.setSelected(true);
        box3TypeNormalRB.setText("正常");
        box3TypeNormalRB.setOpaque(false);
        box3TypeNormalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box3TypeNormalRBActionPerformed(evt);
            }
        });
        jPanel41.add(box3TypeNormalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        box3TotalNumTxt.setDocument(new NumberDocument(3,0));
        box3TotalNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box3TotalNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box3TotalNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box3TotalNumTxt.setText("500");
        box3TotalNumTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                box3TotalNumTxtFocusLost(evt);
            }
        });
        jPanel41.add(box3TotalNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 120, 30));

        jLabel56.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel56.setText("容量：");
        jPanel41.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, 30));

        jLabel58.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel58.setText("数量：");
        jPanel41.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, 30));

        box3CurrentNumTxt.setEditable(false);
        box3CurrentNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box3CurrentNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box3CurrentNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box3CurrentNumTxt.setText("0");
        jPanel41.add(box3CurrentNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 120, 30));

        jLabel60.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel60.setText("状态：");
        jPanel41.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, 30));

        box3StatusPB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box3StatusPB.setForeground(java.awt.Color.green);
        box3StatusPB.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        box3StatusPB.setStringPainted(true);
        jPanel41.add(box3StatusPB, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 120, 30));

        jPanel5.add(jPanel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 980, 60));

        jPanel42.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(251, 216, 182), 1, true), "4号票箱", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 1, 14), new java.awt.Color(94, 55, 16))); // NOI18N
        jPanel42.setOpaque(false);
        jPanel42.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        box4ResetBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box4ResetBtn.setText("复位");
        box4ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box4ResetBtnActionPerformed(evt);
            }
        });
        jPanel42.add(box4ResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 20, -1, -1));

        box4UnloadBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box4UnloadBtn.setText("拆卸");
        box4UnloadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box4UnloadBtnActionPerformed(evt);
            }
        });
        jPanel42.add(box4UnloadBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 20, -1, -1));

        box4TypeInvalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box4TypeInvalRB.setForeground(new java.awt.Color(94, 55, 16));
        box4TypeInvalRB.setText("废票");
        box4TypeInvalRB.setOpaque(false);
        box4TypeInvalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box4TypeInvalRBActionPerformed(evt);
            }
        });
        jPanel42.add(box4TypeInvalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        box4TypeNormalRB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box4TypeNormalRB.setForeground(new java.awt.Color(94, 55, 16));
        box4TypeNormalRB.setSelected(true);
        box4TypeNormalRB.setText("正常");
        box4TypeNormalRB.setOpaque(false);
        box4TypeNormalRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box4TypeNormalRBActionPerformed(evt);
            }
        });
        jPanel42.add(box4TypeNormalRB, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        box4TotalNumTxt.setDocument(new NumberDocument(3,0));
        box4TotalNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box4TotalNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box4TotalNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box4TotalNumTxt.setText("500");
        box4TotalNumTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                box4TotalNumTxtFocusLost(evt);
            }
        });
        jPanel42.add(box4TotalNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 120, 30));

        jLabel59.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel59.setText("容量：");
        jPanel42.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, 30));

        jLabel61.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel61.setText("数量：");
        jPanel42.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1, 30));

        box4CurrentNumTxt.setEditable(false);
        box4CurrentNumTxt.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box4CurrentNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        box4CurrentNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        box4CurrentNumTxt.setText("0");
        jPanel42.add(box4CurrentNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 20, 120, 30));

        jLabel62.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        jLabel62.setText("状态：");
        jPanel42.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, 30));

        box4StatusPB.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        box4StatusPB.setForeground(java.awt.Color.green);
        box4StatusPB.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        box4StatusPB.setStringPainted(true);
        jPanel42.add(box4StatusPB, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 20, 120, 30));

        jPanel5.add(jPanel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 980, 60));

        channelResetBtn.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        channelResetBtn.setText("复位通道");
        channelResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                channelResetBtnActionPerformed(evt);
            }
        });
        jPanel5.add(channelResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 340, -1, -1));

        jPanel6.setBackground(java.awt.Color.blue);
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 20), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));
        jPanel6.setOpaque(false);
        jPanel6.setPreferredSize(new java.awt.Dimension(978, 90));

        pauseBtn.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        pauseBtn.setLabel("暂停");
        pauseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseBtnActionPerformed(evt);
            }
        });

        exitBtn.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        exitBtn.setLabel("退出");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        progressBar.setFont(new java.awt.Font("宋体", 1, 18)); // NOI18N
        progressBar.setForeground(java.awt.Color.green);
        progressBar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        progressBar.setString("");
        progressBar.setStringPainted(true);

        resumeBtn.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        resumeBtn.setText("继续");
        resumeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resumeBtnActionPerformed(evt);
            }
        });

        runBtn.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        runBtn.setText("运行");
        runBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runBtnActionPerformed(evt);
            }
        });

        infoMsgLbl.setFont(new java.awt.Font("黑体", 0, 18)); // NOI18N
        infoMsgLbl.setForeground(java.awt.Color.red);
        infoMsgLbl.setText(" ");

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(44, 44, 44)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(infoMsgLbl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 904, Short.MAX_VALUE)
                    .add(progressBar, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .add(runBtn)
                .add(37, 37, 37)
                .add(pauseBtn)
                .add(37, 37, 37)
                .add(resumeBtn)
                .add(54, 54, 54)
                .add(exitBtn)
                .add(266, 266, 266))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(4, 4, 4)
                .add(infoMsgLbl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .add(10, 10, 10)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(pauseBtn)
                    .add(resumeBtn)
                    .add(runBtn)
                    .add(exitBtn))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(progressBar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBackground(java.awt.Color.blue);
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "运行信息", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 20), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));
        jPanel3.setOpaque(false);
        jPanel3.setPreferredSize(new java.awt.Dimension(978, 90));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("合法数量：");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(356, 37, -1, -1));

        jLabel19.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("分拣数量：");
        jPanel3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 37, -1, -1));

        finishNumTxt.setEditable(false);
        finishNumTxt.setFont(new java.awt.Font("宋体", 1, 22)); // NOI18N
        finishNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        finishNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        finishNumTxt.setText("0");
        finishNumTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finishNumTxtMouseClicked(evt);
            }
        });
        jPanel3.add(finishNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(159, 37, 160, 30));

        goodCardNumTxt.setEditable(false);
        goodCardNumTxt.setFont(new java.awt.Font("宋体", 1, 22)); // NOI18N
        goodCardNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        goodCardNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        goodCardNumTxt.setText("0");
        jPanel3.add(goodCardNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(485, 37, 160, 30));

        jLabel22.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("非法数量：");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 37, -1, -1));

        badCardNumTxt.setEditable(false);
        badCardNumTxt.setFont(new java.awt.Font("宋体", 1, 22)); // NOI18N
        badCardNumTxt.setForeground(new java.awt.Color(0, 39, 80));
        badCardNumTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        badCardNumTxt.setText("0");
        jPanel3.add(badCardNumTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(806, 37, 160, 30));

        jLabel1.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(94, 55, 16));
        jLabel1.setText("[双击可查询分拣明细]");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, 140, -1));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1002, Short.MAX_VALUE)
                    .add(jPanel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1002, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1002, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .add(4, 4, 4)
                .add(jPanel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 387, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 109, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1024, 768));
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 退出
     * 
     * @param evt 
     */
    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
                
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定退出分拣？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        } 
        if(null != makeCardThread && makeCardThread.isRunning()){
            yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("设备正运行中，是否继续退出？");
            if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
                return;
            } 
            //MessageShowUtil.alertWarnMsg("设备运行中，不能退出！");
            //return;
        }
        exit();
    }//GEN-LAST:event_exitBtnActionPerformed
   
    /**
     * 暂停
     * 
     * @param evt 
     */
    private void pauseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseBtnActionPerformed
        pause();
    }//GEN-LAST:event_pauseBtnActionPerformed

    /**
     * 继续
     * 
     * @param evt 
     */
    private void resumeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resumeBtnActionPerformed
        
        if (null != makeCardThread && makeCardThread.isRunning()) {
            MessageShowUtil.alertWarnMsg("设备运行中，不能继续！");
            return;
        }
        //查检分拣条件
        if(!checkSortCons()){
            return;
        }
        resume();
    }//GEN-LAST:event_resumeBtnActionPerformed

    /**
     * 开始
     * 
     * @param evt 
     */
    private void runBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runBtnActionPerformed
        
        run();
    }//GEN-LAST:event_runBtnActionPerformed
  
    private void box1TypeNormalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box1TypeNormalRBActionPerformed
        
        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box1TypeInvalRB);
    }//GEN-LAST:event_box1TypeNormalRBActionPerformed

    private void box1TypeInvalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box1TypeInvalRBActionPerformed
        
        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box1TypeNormalRB);
    }//GEN-LAST:event_box1TypeInvalRBActionPerformed

    private void box2TypeNormalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box2TypeNormalRBActionPerformed
        
        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box2TypeInvalRB);
    }//GEN-LAST:event_box2TypeNormalRBActionPerformed

    private void box2TypeInvalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box2TypeInvalRBActionPerformed
        
        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box2TypeNormalRB);
    }//GEN-LAST:event_box2TypeInvalRBActionPerformed

    private void box3TypeNormalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box3TypeNormalRBActionPerformed
        
        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box3TypeInvalRB);       
    }//GEN-LAST:event_box3TypeNormalRBActionPerformed

    private void box3TypeInvalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box3TypeInvalRBActionPerformed

        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box3TypeNormalRB);
    }//GEN-LAST:event_box3TypeInvalRBActionPerformed

    private void box4TypeNormalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box4TypeNormalRBActionPerformed

        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box4TypeInvalRB);
    }//GEN-LAST:event_box4TypeNormalRBActionPerformed

    private void box4TypeInvalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box4TypeInvalRBActionPerformed

        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box4TypeNormalRB);
    }//GEN-LAST:event_box4TypeInvalRBActionPerformed

    private void box5TypeNormalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box5TypeNormalRBActionPerformed
  
        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box5TypeInvalRB);
    }//GEN-LAST:event_box5TypeNormalRBActionPerformed

    private void box5TypeInvalRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box5TypeInvalRBActionPerformed

        JRadioButton rb = (JRadioButton) evt.getSource();
        setBoxTypeSelected(rb, box5TypeNormalRB);
    }//GEN-LAST:event_box5TypeInvalRBActionPerformed

    /**
     * 复位所有
     * 
     * @param evt 
     */
    private void boxAllResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxAllResetBtnActionPerformed
        
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定复位所有票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能复位票箱！");
            return;
        }
        resetAllBox();
        clearAllBoxNum();
        MessageShowUtil.alertInfoMsg("复位所有票箱完成.");
    }//GEN-LAST:event_boxAllResetBtnActionPerformed
 
    /**
     * 复位单个
     * 
     * @param evt 
     */
    private void box1ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box1ResetBtnActionPerformed
        
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定复位1#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能复位票箱！");
            return;
        }
        resetOneBox(1);
        clearOneBoxNum(1);
        MessageShowUtil.alertInfoMsg("复位1#票箱完成.");
    }//GEN-LAST:event_box1ResetBtnActionPerformed

    /**
     * 复位单个
     * 
     * @param evt 
     */
    private void box2ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box2ResetBtnActionPerformed
        
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定复位2#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能复位票箱！");
            return;
        }
        resetOneBox(2);
        clearOneBoxNum(2);
        MessageShowUtil.alertInfoMsg("复位2#票箱完成.");
    }//GEN-LAST:event_box2ResetBtnActionPerformed

    /**
     * 复位单个
     * 
     * @param evt 
     */
    private void box3ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box3ResetBtnActionPerformed
        
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定复位3#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能复位票箱！");
            return;
        }
        resetOneBox(3);
        clearOneBoxNum(3);
        MessageShowUtil.alertInfoMsg("复位3#票箱完成.");
    }//GEN-LAST:event_box3ResetBtnActionPerformed

    /**
     * 复位单个
     * 
     * @param evt 
     */
    private void box4ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box4ResetBtnActionPerformed
        
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定复位4#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能复位票箱！");
            return;
        }
        resetOneBox(4);
        clearOneBoxNum(4);
        MessageShowUtil.alertInfoMsg("复位4#票箱完成.");
    }//GEN-LAST:event_box4ResetBtnActionPerformed

    /**
     * 复位单个
     * 
     * @param evt 
     */
    private void box5ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box5ResetBtnActionPerformed
        
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定复位5#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能复位票箱！");
            return;
        }
        resetOneBox(5);
        clearOneBoxNum(5);
        MessageShowUtil.alertInfoMsg("复位5#票箱完成.");   
    }//GEN-LAST:event_box5ResetBtnActionPerformed

    /**
     * 卸载所有
     * 
     * @param evt 
     */
    private void boxAllUnloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxAllUnloadBtnActionPerformed

        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定拆卸所有票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能拆卸票箱！");
            return;
        }
        uploadAllBox();
        MessageShowUtil.alertInfoMsg("拆卸所有票箱完成.");
    }//GEN-LAST:event_boxAllUnloadBtnActionPerformed

    /**
     * 卸载单个
     * 
     * @param evt 
     */
    private void box1UnloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box1UnloadBtnActionPerformed
        
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定拆卸1#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能拆卸票箱！");
            return;
        }
        uploadOneBox(1);
        MessageShowUtil.alertInfoMsg("拆卸1#票箱完成.");   
    }//GEN-LAST:event_box1UnloadBtnActionPerformed

    /**
     * 卸载单个
     * 
     * @param evt 
     */
    private void box2UnloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box2UnloadBtnActionPerformed

        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定拆卸2#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
           return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能拆卸票箱！");
            return;
        }
        uploadOneBox(2);
        MessageShowUtil.alertInfoMsg("拆卸2#票箱完成.");    
    }//GEN-LAST:event_box2UnloadBtnActionPerformed

    /**
     * 卸载单个
     * 
     * @param evt 
     */
    private void box3UnloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box3UnloadBtnActionPerformed

        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定拆卸3#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
           return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能拆卸票箱！");
            return;
        }
        uploadOneBox(3);
        MessageShowUtil.alertInfoMsg("拆卸3#票箱完成.");    
    }//GEN-LAST:event_box3UnloadBtnActionPerformed

    /**
     * 卸载单个
     * 
     * @param evt 
     */
    private void box4UnloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box4UnloadBtnActionPerformed
        
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定拆卸4#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能拆卸票箱！");
            return;
        }
        uploadOneBox(4);
        MessageShowUtil.alertInfoMsg("拆卸4#票箱完成.");
    }//GEN-LAST:event_box4UnloadBtnActionPerformed

    /**
     * 卸载单个
     * 
     * @param evt 
     */
    private void box5UnloadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box5UnloadBtnActionPerformed

        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定拆卸5#票箱？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能拆卸票箱！");
            return;
        }
        uploadOneBox(5);
        MessageShowUtil.alertInfoMsg("拆卸5#票箱完成.");
    }//GEN-LAST:event_box5UnloadBtnActionPerformed

    /**
     * 复位通道
     * 
     * @param evt 
     */
    private void channelResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_channelResetBtnActionPerformed
        
        int yesOrNo = MessageShowUtil.confirmInfoMsgYesOrNo("是否确定复位通道？");
        if (!MessageShowUtil.isConfirmYes(yesOrNo)) {
            return;
        }
        if(null != makeCardThread && makeCardThread.isRunning()){
            MessageShowUtil.alertWarnMsg("设备运行中，不能复位通道！");
            return;
        }
        resetChannel();
        MessageShowUtil.alertInfoMsg("复位通道完成.");
    }//GEN-LAST:event_channelResetBtnActionPerformed

    /**
     * 开始制卡时间能动性
     * 
     * @param evt 
     */
    private void issueBeginDateCkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueBeginDateCkActionPerformed

        issueBeginDateCb.setEnabled(issueBeginDateCk.isSelected());
    }//GEN-LAST:event_issueBeginDateCkActionPerformed

    /**
     * 结束制卡时间能动性
     *
     * @param evt
     */
    private void issueEndDateCkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_issueEndDateCkActionPerformed
       
        issueEndDateCb.setEnabled(issueEndDateCk.isSelected());
    }//GEN-LAST:event_issueEndDateCkActionPerformed

    private void finishNumTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finishNumTxtMouseClicked
        int clickCount = evt.getClickCount();
        if (clickCount == 2) {
            showSortCardDetail();
        }
    }//GEN-LAST:event_finishNumTxtMouseClicked

    private void box1TotalNumTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_box1TotalNumTxtFocusLost
        // TODO add your handling code here:
        int boxCurrentNum = boxStateVos[0].getBoxCurrentNum();
        boxStateVos[0].setBoxCurrentNum(boxCurrentNum);
    }//GEN-LAST:event_box1TotalNumTxtFocusLost

    private void box2TotalNumTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_box2TotalNumTxtFocusLost
        // TODO add your handling code here:
        int boxCurrentNum = boxStateVos[1].getBoxCurrentNum();
        boxStateVos[1].setBoxCurrentNum(boxCurrentNum);
    }//GEN-LAST:event_box2TotalNumTxtFocusLost

    private void box3TotalNumTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_box3TotalNumTxtFocusLost
        // TODO add your handling code here:
        int boxCurrentNum = boxStateVos[2].getBoxCurrentNum();
        boxStateVos[2].setBoxCurrentNum(boxCurrentNum);
    }//GEN-LAST:event_box3TotalNumTxtFocusLost

    private void box4TotalNumTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_box4TotalNumTxtFocusLost
        // TODO add your handling code here:
        int boxCurrentNum = boxStateVos[3].getBoxCurrentNum();
        boxStateVos[3].setBoxCurrentNum(boxCurrentNum);
    }//GEN-LAST:event_box4TotalNumTxtFocusLost

    private void box5TotalNumTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_box5TotalNumTxtFocusLost
        // TODO add your handling code here:
        int boxCurrentNum = boxStateVos[4].getBoxCurrentNum();
        boxStateVos[4].setBoxCurrentNum(boxCurrentNum);
    }//GEN-LAST:event_box5TotalNumTxtFocusLost

    /**
     * 开始运行
     *
     */
    @Override
    public void run() {

        //检测ES物理状态
        if(!checkESStatus()){
            MessageShowUtil.alertErrorMsg("ES机接口不正常,请检查！");
            return;
        }
        //查检分拣条件
        if(!checkSortCons()){
            return;
        }
        
        //检测票箱设置状态
        if (!checkBoxSetStatus()) {
            return;
        }
        //检测票箱物理状态
        if(!checkEsPhyStatus()){
            return;
        }

        //启动制卡线程
        startMakeCardThread();

        //设置按钮开始状态
        setBtnStatus(PKAppConstant.MAKE_CARD_STATUS_RUN);
    }
    
    /**
     * 启动制卡线程
     *
     */
    @Override
    protected void startMakeCardThread(){
        makeCardThread = new PKSortCardThread(this, boxStateVos, siteStatusVos);
        makeCardThread.start();
    }
    
    /**
     * 检查分拣条件是否合法
     * 
     * @return 
     */
    protected boolean checkSortCons(){
        //发行时间
        SortCardCondVo sortVo = getSortConditions();
        if(!sortVo.getIssueEndDate().equals("") &&
                sortVo.getIssueBeginDate().compareTo(sortVo.getIssueEndDate())>0){
            MessageShowUtil.alertWarnMsg("发行日期，开始发行日期不能大于结束发行日期！");
            return false;
        }
        //交易次数
        if(!sortVo.getLifeEndCycle().equals("") &&
            sortVo.getLifeBeginCycle().compareTo(sortVo.getLifeEndCycle())>0){
            MessageShowUtil.alertWarnMsg("交易计数，开始交易计数不能大于结束交易计数！");
            return false;
        }
        //卡序号段
        if(!sortVo.getCardEndSeqNo().equals("") &&
            sortVo.getCardBeginSeqNo().compareTo(sortVo.getCardEndSeqNo())>0){
            MessageShowUtil.alertWarnMsg("卡序号段，开始卡序号不能大于结束卡序号！");
            return false;
        }
        
        return true;
    }
    
    /**
     * 运行时锁票箱区
     *
     */
    @Override
    protected void runingLockBox(boolean lock) {

        lock = !lock;
        for (BoxStateVo boxStateVo : boxStateVos) {
            boxStateVo.boxTypeNormalRB.setEnabled(lock);
            boxStateVo.boxTypeInvalRB.setEnabled(lock);
            boxStateVo.boxTotalNumTxt.setEditable(lock);
            boxStateVo.boxResetBtn.setEnabled(lock);
            boxStateVo.boxUnloadBtn.setEnabled(lock);
        }
        boxAllResetBtn.setEnabled(lock);
        boxAllUnloadBtn.setEnabled(lock);
        channelResetBtn.setEnabled(lock);
    }
    
    /**
     * 设置按钮状态,包括初始化、运行、暂停、继续、退出
     * 
     * @param btn 
     */
    @Override
    public void setBtnStatus(int btn){
        switch(btn){
            case PKAppConstant.MAKE_CARD_STATUS_INIT:{
                runBtn.setEnabled(true);
                pauseBtn.setEnabled(false);
                resumeBtn.setEnabled(false);
                exitBtn.setEnabled(true);
                break;
            }
            case PKAppConstant.MAKE_CARD_STATUS_RUN:{
                runBtn.setEnabled(false);
                pauseBtn.setEnabled(true);
                exitBtn.setEnabled(false);
                runingLockBox(true);
                break;
            }
            case PKAppConstant.MAKE_CARD_STATUS_PAUSE:{
                pauseBtn.setEnabled(false);
                resumeBtn.setEnabled(true);
                exitBtn.setEnabled(true);
                runingLockBox(false);
                break;
            }
            case PKAppConstant.MAKE_CARD_STATUS_RESUME:{
                pauseBtn.setEnabled(true);
                resumeBtn.setEnabled(false);
                exitBtn.setEnabled(false);
                runingLockBox(true);
                break;
            }
            case PKAppConstant.MAKE_CARD_STATUS_STOP:{
                runBtn.setEnabled(true);
                pauseBtn.setEnabled(false);
                resumeBtn.setEnabled(false);
                exitBtn.setEnabled(true);
                runingLockBox(false);
                break;
            }case PKAppConstant.MAKE_CARD_STATUS_EXIT:{
                runBtn.setEnabled(false);
                pauseBtn.setEnabled(false);
                resumeBtn.setEnabled(false);
                exitBtn.setEnabled(true);
                runingLockBox(false);
                break;
            }
            default:{
                break;
            }
        }
    }

    /**
     * 写提示或出错信息
     * 
     * @param msg 
     */
    @Override
    public void writeInfoMsg(String msg){
        this.infoMsgLbl.setText(msg);
    }
    
    /**
     * 初始化订单参数
     *
     */
    @Override
    protected void initOrderParam(){
        //订单
        curOrderVo = new OrderVo();
        curOrderVo.setOrderNum(Integer.MAX_VALUE);
    }
    
    /**
     * 初始化分拣参数
     *
     */
    private void initSortParam(){
        
        //发行状态 0 –未发行;1 –已发行;2 – 注销
        UIUtil.initComBoxValueWithDefault(issueStatusCB, AppConstant.CARD_ISSUE_STATUS);
        
        //票卡类型
        List<KeyValueVo> ticketTypeVos = new ArrayList<KeyValueVo>();
        for(TicketTypeVo ticketTypeVo: AppConstant.ticketTypeVos){
            ticketTypeVos.add(new KeyValueVo(ticketTypeVo.getCardCode(), ticketTypeVo.getCardDesc()));
        }
        UIUtil.initComBoxValueWithDefault(cardTypeCb, ticketTypeVos);
        
        //卡片状态
        UIUtil.initComBoxValueWithDefault(cardStatusCB, AppConstant.CARD_STATUS);
        
        //是否损坏
        UIUtil.initComBoxValueWithDefault(isBadCb, AppConstant.CARD_IS_BAD);
        
        //制卡时间
        issueBeginDateCb.setEnabled(false);
        issueBeginDateCk.setSelected(false);
        issueEndDateCb.setEnabled(false);
        issueEndDateCk.setSelected(false);
    }
    
     /**
     * 初始化票箱参数
     * 
     */
    private void initBoxParam(){
    
        boxStateVos[0] = new BoxStateVo(1,box1TypeNormalRB, box1TypeInvalRB, box1TotalNumTxt, 
                box1CurrentNumTxt, box1StatusPB, box1ResetBtn, box1UnloadBtn);
        box1TypeNormalRB.setSelected(true);
        box1TotalNumTxt.setText(String.valueOf(PKAppConstant.ES_CARD_BOX_TOTAL_NUM));
        box1CurrentNumTxt.setText("0");
        box1StatusPB.setValue(0);
        box1ResetBtn.setEnabled(true);
        box1UnloadBtn.setEnabled(true);
        boxStateVos[1] = new BoxStateVo(2,box2TypeNormalRB, box2TypeInvalRB, box2TotalNumTxt, 
                box2CurrentNumTxt, box2StatusPB, box2ResetBtn, box2UnloadBtn);
        box2TypeNormalRB.setSelected(true);
        box2TotalNumTxt.setText(String.valueOf(PKAppConstant.ES_CARD_BOX_TOTAL_NUM));
        box2CurrentNumTxt.setText("0");
        box2StatusPB.setValue(0);
        box2ResetBtn.setEnabled(true);
        box2UnloadBtn.setEnabled(true);
        boxStateVos[2] = new BoxStateVo(3,box3TypeNormalRB, box3TypeInvalRB, box3TotalNumTxt, 
                box3CurrentNumTxt, box3StatusPB, box3ResetBtn, box3UnloadBtn);
        box3TypeNormalRB.setSelected(true);
        box3TotalNumTxt.setText(String.valueOf(PKAppConstant.ES_CARD_BOX_TOTAL_NUM));
        box3CurrentNumTxt.setText("0");
        box3StatusPB.setValue(0);
        box3ResetBtn.setEnabled(true);
        box3UnloadBtn.setEnabled(true);
        boxStateVos[3] = new BoxStateVo(4,box4TypeNormalRB, box4TypeInvalRB, box4TotalNumTxt, 
                box4CurrentNumTxt, box4StatusPB, box4ResetBtn, box4UnloadBtn);
        box4TypeNormalRB.setSelected(true);
        box4TotalNumTxt.setText(String.valueOf(PKAppConstant.ES_CARD_BOX_TOTAL_NUM));
        box4CurrentNumTxt.setText("0");
        box4StatusPB.setValue(0);
        box4ResetBtn.setEnabled(true);
        box4UnloadBtn.setEnabled(true);
        boxStateVos[4] = new BoxStateVo(5,box5TypeNormalRB, box5TypeInvalRB, box5TotalNumTxt, 
                box5CurrentNumTxt, box5StatusPB, box5ResetBtn, box5UnloadBtn);
        box5TypeInvalRB.setSelected(true);
        box5TotalNumTxt.setText(String.valueOf(PKAppConstant.ES_CARD_BOX_TOTAL_NUM));
        box5CurrentNumTxt.setText("0");
        box5StatusPB.setValue(0);
        box5ResetBtn.setEnabled(true);
        box5UnloadBtn.setEnabled(true);
        
        boxAllResetBtn.setEnabled(true);
        boxAllUnloadBtn.setEnabled(true);
        channelResetBtn.setEnabled(true);
    }
    
    /**
     * 初始化卡位状态
     */
    private void initSiteStatus() {
        
        JLabel[] sites = new JLabel[PKAppConstant.ES_CARD_SITE_NUM];
        int len = sites.length;
        for(int i=0; i<len; i++){
            sites[i] = new JLabel();
        }
        siteStatusVos = new SiteStatusVo(new JCheckBox(), sites);
        
    }
    
    /**
     * 初始化按钮
     * 
     */
    private void initBtnEnable(){
        setBtnStatus(PKAppConstant.MAKE_CARD_STATUS_INIT);
    }
    
    /**
     * 设置界面生产单
     * 
     */
    @Override
    protected void setUICurProduceOrder() {
    
        goodCardNumTxt.setText(String.valueOf(curOrderVo.getGoodCardNum()));
        badCardNumTxt.setText(String.valueOf(curOrderVo.getBadCardNum()));
        finishNumTxt.setText(String.valueOf(curOrderVo.getFinishNum()));
        
    }
    
    /**
     * 设置界面写卡进度条
     * 
     * @param value
     * @param color 
     */
    @Override
    protected void setUIWriteCardProgress(int value, Color color) {
        this.progressBar.setForeground(color);
        this.progressBar.setValue(value);
    }
    
    /**
     * 取分拣条件表单值
     * 
     * @return 
     */
    public SortCardCondVo getSortConditions(){
        
        sortCardCondVo.setIssueStatus(((SelectOptionVo)issueStatusCB.getSelectedItem()).getValue());//发行状态
        sortCardCondVo.setTicketType( ((SelectOptionVo)cardTypeCb.getSelectedItem()).getValue());//票卡类型
        sortCardCondVo.setStatus(((SelectOptionVo)cardStatusCB.getSelectedItem()).getValue());//卡片状态
        if(issueBeginDateCk.isSelected()){
            sortCardCondVo.setIssueBeginDate(issueBeginDateCb.getSelectedItem().toString());//发行开始日期
        }else{
            sortCardCondVo.setIssueBeginDate("");
        }
        if(issueEndDateCk.isSelected()){
            sortCardCondVo.setIssueEndDate(issueEndDateCb.getSelectedItem().toString());//发行结束日期
        }else{
            sortCardCondVo.setIssueEndDate("");
        }
        sortCardCondVo.setIsBad(((SelectOptionVo)isBadCb.getSelectedItem()).getValue());//是否损坏
        sortCardCondVo.setLifeBeginCycle(lifeBeginCycleTxt.getText());//生命开始周期
        sortCardCondVo.setLifeEndCycle(lifeEndCycleTxt.getText());//生命结束周期
        sortCardCondVo.setCardBeginSeqNo(cardBeginSeqTxt.getText());//卡开始序号
        sortCardCondVo.setCardEndSeqNo(cardEndSeqTxt.getText());//卡结束序号
        
        return sortCardCondVo;
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField badCardNumTxt;
    private javax.swing.JTextField box1CurrentNumTxt;
    private javax.swing.JButton box1ResetBtn;
    private javax.swing.ButtonGroup box1StatusBG;
    private javax.swing.JProgressBar box1StatusPB;
    private javax.swing.JTextField box1TotalNumTxt;
    private javax.swing.ButtonGroup box1TypeBG;
    private javax.swing.JRadioButton box1TypeInvalRB;
    private javax.swing.JRadioButton box1TypeNormalRB;
    private javax.swing.JButton box1UnloadBtn;
    private javax.swing.JTextField box2CurrentNumTxt;
    private javax.swing.JButton box2ResetBtn;
    private javax.swing.ButtonGroup box2StatusBG;
    private javax.swing.JProgressBar box2StatusPB;
    private javax.swing.JTextField box2TotalNumTxt;
    private javax.swing.ButtonGroup box2TypeBG;
    private javax.swing.JRadioButton box2TypeInvalRB;
    private javax.swing.JRadioButton box2TypeNormalRB;
    private javax.swing.JButton box2UnloadBtn;
    private javax.swing.JTextField box3CurrentNumTxt;
    private javax.swing.JButton box3ResetBtn;
    private javax.swing.ButtonGroup box3StatusBG;
    private javax.swing.JProgressBar box3StatusPB;
    private javax.swing.JTextField box3TotalNumTxt;
    private javax.swing.ButtonGroup box3TypeBG;
    private javax.swing.JRadioButton box3TypeInvalRB;
    private javax.swing.JRadioButton box3TypeNormalRB;
    private javax.swing.JButton box3UnloadBtn;
    private javax.swing.JTextField box4CurrentNumTxt;
    private javax.swing.JButton box4ResetBtn;
    private javax.swing.ButtonGroup box4StatusBG;
    private javax.swing.JProgressBar box4StatusPB;
    private javax.swing.JTextField box4TotalNumTxt;
    private javax.swing.ButtonGroup box4TypeBG;
    private javax.swing.JRadioButton box4TypeInvalRB;
    private javax.swing.JRadioButton box4TypeNormalRB;
    private javax.swing.JButton box4UnloadBtn;
    private javax.swing.JTextField box5CurrentNumTxt;
    private javax.swing.JButton box5ResetBtn;
    private javax.swing.ButtonGroup box5StatusBG;
    private javax.swing.JProgressBar box5StatusPB;
    private javax.swing.JTextField box5TotalNumTxt;
    private javax.swing.ButtonGroup box5TypeBG;
    private javax.swing.JRadioButton box5TypeInvalRB;
    private javax.swing.JRadioButton box5TypeNormalRB;
    private javax.swing.JButton box5UnloadBtn;
    private javax.swing.JButton boxAllResetBtn;
    private javax.swing.JButton boxAllUnloadBtn;
    private javax.swing.JTextField cardBeginSeqTxt;
    private javax.swing.JTextField cardEndSeqTxt;
    private javax.swing.JComboBox cardStatusCB;
    private javax.swing.JComboBox cardTypeCb;
    private javax.swing.JButton channelResetBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JTextField finishNumTxt;
    private javax.swing.JTextField goodCardNumTxt;
    private javax.swing.JLabel infoMsgLbl;
    private javax.swing.JComboBox isBadCb;
    private javax.swing.JComboBox issueBeginDateCb;
    private javax.swing.JCheckBox issueBeginDateCk;
    private javax.swing.JComboBox issueEndDateCb;
    private javax.swing.JCheckBox issueEndDateCk;
    private javax.swing.JComboBox issueStatusCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField lifeBeginCycleTxt;
    private javax.swing.JTextField lifeEndCycleTxt;
    private javax.swing.JButton pauseBtn;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JButton resumeBtn;
    private javax.swing.JButton runBtn;
    // End of variables declaration//GEN-END:variables

 }

