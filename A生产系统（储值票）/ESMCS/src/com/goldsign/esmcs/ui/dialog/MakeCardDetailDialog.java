/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.goldsign.esmcs.ui.dialog;

import com.goldsign.csfrm.util.ExcelExport;
import com.goldsign.csfrm.util.MessageShowUtil;
import com.goldsign.csfrm.util.UIUtil;
import com.goldsign.csfrm.vo.CallResult;
import com.goldsign.esmcs.application.Application;
import com.goldsign.esmcs.env.AppConstant;
import com.goldsign.esmcs.exception.FileException;
import com.goldsign.esmcs.service.IFileService;
import com.goldsign.esmcs.vo.OrderParam;
import com.goldsign.esmcs.vo.OrderVo;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JTable;
import org.apache.log4j.Logger;

/**
 *
 * @author lenovo
 */
public class MakeCardDetailDialog extends JDialog {

    private static final Logger logger = Logger.getLogger(MakeCardDetailDialog.class.getName());
    
    private JTable resultSetTableMain;
    
    private OrderVo curOrderVo;
    
    private boolean makeCardResult;
    
    private IFileService fileService;
    
    /**
     * Creates new form MakeCardDetailPanel
     */
    public MakeCardDetailDialog(boolean makeCardResult, OrderVo orderVo) {
        initComponents();
        this.makeCardResult = makeCardResult;
        this.curOrderVo = orderVo;
        this.fileService = ((Application)AppConstant.application).getFileService();
        doQuery();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        closeBtn = new javax.swing.JButton();
        leadOutBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        titleTxt = new javax.swing.JTextField();
        mainSPn = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("制卡明细");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(55, 133, 181));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));

        jPanel3.setBackground(new java.awt.Color(237, 247, 249));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setPreferredSize(new java.awt.Dimension(790, 108));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        closeBtn.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        closeBtn.setText("关闭");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        jPanel3.add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 90, 35));

        leadOutBtn.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        leadOutBtn.setText("导出");
        leadOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leadOutBtnActionPerformed(evt);
            }
        });
        jPanel3.add(leadOutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 90, 35));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        titleTxt.setBackground(new java.awt.Color(185, 227, 241));
        titleTxt.setEditable(false);
        titleTxt.setFont(new java.awt.Font("宋体", 1, 15)); // NOI18N
        titleTxt.setForeground(new java.awt.Color(94, 55, 16));
        titleTxt.setText("   制卡结果列表");
        titleTxt.setAlignmentX(0.0F);
        titleTxt.setAlignmentY(0.0F);
        titleTxt.setBorder(null);

        mainSPn.setBackground(new java.awt.Color(255, 255, 255));
        mainSPn.setBorder(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
            .addComponent(mainSPn)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(titleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(mainSPn, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap(536, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * 关闭
     * 
     * @param evt 
     */
    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeBtnActionPerformed

    /**
     * 导出
     * 
     * @param evt 
     */
    private void leadOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leadOutBtnActionPerformed
        leadOut();
    }//GEN-LAST:event_leadOutBtnActionPerformed

    /**
     * 导出
     * 
     */
    private void leadOut(){
        
        if(null == resultSetTableMain){
            return;
        }
        JTable[] tables = new JTable[]{resultSetTableMain};
        ExcelExport.exportXLSJTable(tables, this);
    }
    
    /**
     * 查询
     *
     */
    private void doQuery(){
    
        //查询
        List<Object[]> cards = getMadeCardDetails();
        
        //生成列表
        genMainResultSetTable(cards);
        
    }
    
    /**
     * 取得参数
     *
     * @return
     */
    private List<Object[]> getMadeCardDetails() {

        List<Object[]> cards = new ArrayList<Object[]>();
        OrderParam orderParam = new OrderParam();
        orderParam.setOrderNo(curOrderVo.getOrderNo());
        CallResult callResult = null;
        try {
            if (makeCardResult) {//好卡
                callResult = fileService.getGoodOrder(orderParam);
                if(callResult.isSuccess()){
                    cards = fmtGoodOrder(callResult.getObjs());
                }
            } else {//坏卡
                callResult = fileService.getBadOrder(orderParam);
                if (callResult.isSuccess()) {
                    cards = fmtBadOrder(callResult.getObjs());
                }
            }
        } catch (FileException ex) {
            logger.error(ex);
            MessageShowUtil.alertErrorMsg(ex.getMessage());
        }
       
        return cards;
    }
    
    /**
     * 格式化好卡
     * 
     * @param goodOrderVos
     * @return 
     */
    private List<Object[]> fmtGoodOrder(List<Object[]> goodOrderVos){
        
        List<Object[]> goodOrderVosRet = new ArrayList<Object[]>();
        for(Object[] objArr: goodOrderVos){
            if(null == objArr || objArr.length<7){
                continue;
            }
                        
            Object[] objArrRet =  new Object[5];
            objArrRet[0] = ((String)objArr[1]).trim();
            objArrRet[1] = ((String)objArr[6]).trim();
            objArrRet[2] = ((String)objArr[4]).trim();
            objArrRet[3] = "成功";
            objArrRet[4] = "";
            goodOrderVosRet.add(objArrRet);
        }
       
        return goodOrderVosRet;
    }
    
    /**
     * 格式化坏卡
     * 
     * @param badOrderVos
     * @return 
     */
    private List<Object[]> fmtBadOrder(List<Object[]> badOrderVos){
        
        List<Object[]> badOrderVosRet = new ArrayList<Object[]>();
        for(Object[] objArr: badOrderVos){
            if(null == objArr || objArr.length<20){
                continue;
            }
                        
            Object[] objArrRet =  new Object[5];
            objArrRet[0] = ((String)objArr[1]).trim();
            objArrRet[1] = ((String)objArr[6]).trim();
            objArrRet[2] = ((String)objArr[4]).trim();
            objArrRet[3] = "失败,"+((String)objArr[18]).trim();
            objArrRet[4] = ((String)objArr[19]).trim();
            badOrderVosRet.add(objArrRet);
        }
        
        return badOrderVosRet;
    }
    
    /**
     * 根据结果集，生成列表
     *
     * @param result
     */
    private void genMainResultSetTable(List<Object[]> result) {
        //列名称
        String[] columnNames = {"订单号", "物理卡号", "逻辑卡号", "制卡结果", "备注"};
        //列宽度
        int[] columnSize = {130, 130, 130, 100, 265};
        //生成列表
        resultSetTableMain = UIUtil.genResultSetTable(this.mainSPn, result, columnNames, columnSize);
        if(makeCardResult){
            resultSetTableMain.setName("好卡"+titleTxt.getText().trim());
        }else{
            resultSetTableMain.setName("坏卡"+titleTxt.getText().trim());
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton leadOutBtn;
    private javax.swing.JScrollPane mainSPn;
    private javax.swing.JTextField titleTxt;
    // End of variables declaration//GEN-END:variables
}
